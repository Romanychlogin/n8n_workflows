{
  "createdAt": "2025-10-07T21:30:12.820Z",
  "updatedAt": "2025-10-07T22:16:05.213Z",
  "id": "d4D0Fp4pO6Ch7S7C",
  "name": "Receive CRM data",
  "active": true,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "c11cd095-1060-4c9c-87df-2a3c9d34deab",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        0,
        0
      ],
      "id": "6b11411b-3ee6-4590-977a-3dbbd005d09a",
      "name": "Webhook",
      "webhookId": "c11cd095-1060-4c9c-87df-2a3c9d34deab"
    },
    {
      "parameters": {
        "jsCode": "// ---------- helpers ----------\nfunction tryGetItems(nodeName) {\n  try {\n    const arr = $items(nodeName, 0, 0);\n    return Array.isArray(arr) ? arr : [];\n  } catch (e) {\n    return [];\n  }\n}\nfunction toNumber(v) {\n  if (v == null) return 0;\n  const n = Number(v);\n  if (!Number.isNaN(n) && Number.isFinite(n)) return n;\n  const t = Date.parse(v);\n  return Number.isFinite(t) ? t : 0;\n}\nfunction rowTs(row) {\n  // приоритет своей метки, иначе — createdAt Data Table\n  return toNumber(row.ts_site) || toNumber(row.createdAt);\n}\n\n// ---------- CRM payload ----------\nlet crm;\nconst webhookItems = tryGetItems('Webhook');           // <— замени имя, если у тебя нода названа иначе\nif (webhookItems.length) {\n  const w = webhookItems[0].json || {};\n  crm = typeof w.body === 'string' ? JSON.parse(w.body) : w;\n} else {\n  crm = typeof $json.body === 'string' ? JSON.parse($json.body) : $json;\n}\n\n// ---------- pending из Data Table ----------\nlet pendingItems = tryGetItems('Get row(s)').map(i => i.json);  // <— замени имя при необходимости\nif (!pendingItems.length) pendingItems = $input.all().map(i => i.json);\n\n// ---------- параметры сопоставления ----------\nconst now = Date.now();\nconst WINDOW_MS = 10 * 60 * 1000;  // ±10 минут\n\n// фильтр по окну времени\nconst inWindow = pendingItems.filter(r => Math.abs(rowTs(r) - now) <= WINDOW_MS);\n\n// ближайшая по времени\nlet best = null;\nif (inWindow.length) {\n  best = inWindow\n    .slice()\n    .sort((a, b) => Math.abs(rowTs(a) - now) - Math.abs(rowTs(b) - now))[0];\n}\n\n// ---------- результат ----------\nif (best) {\n  const ts = rowTs(best);\n  return [{\n    json: {\n      matched: true,\n      id: best.id,                         // id строки Data Table из Select\n      ts_site: ts,\n      delta_ms: Math.abs(ts - now),\n      site: best,\n      crm: crm\n    }\n  }];\n} else {\n  return [{\n    json: {\n      matched: false,\n      reason: 'no_candidate_in_window',\n      window_ms: WINDOW_MS,\n      pending_count: pendingItems.length,\n      crm: crm\n    }\n  }];\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        384,
        0
      ],
      "id": "0280247b-21b3-403b-8366-050088c9a937",
      "name": "Code in JavaScript"
    },
    {
      "parameters": {
        "operation": "get",
        "dataTableId": {
          "__rl": true,
          "value": "XlfQhVUBPeep3gvZ",
          "mode": "list",
          "cachedResultName": "site leads",
          "cachedResultUrl": "/projects/spKmbJLU4mvACXIB/datatables/XlfQhVUBPeep3gvZ"
        },
        "filters": {
          "conditions": [
            {
              "keyName": "pending",
              "condition": "isTrue"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.dataTable",
      "typeVersion": 1,
      "position": [
        208,
        160
      ],
      "id": "78fd246c-1fe1-47a3-981d-237c516e655e",
      "name": "Get row(s)"
    },
    {
      "parameters": {
        "operation": "update",
        "dataTableId": {
          "__rl": true,
          "value": "XlfQhVUBPeep3gvZ",
          "mode": "list",
          "cachedResultName": "site leads",
          "cachedResultUrl": "/projects/spKmbJLU4mvACXIB/datatables/XlfQhVUBPeep3gvZ"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "pending": "={{ false }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "utm_source",
              "displayName": "utm_source",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "utm_medium",
              "displayName": "utm_medium",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "utm_campaign",
              "displayName": "utm_campaign",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "utm_term",
              "displayName": "utm_term",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "utm_content",
              "displayName": "utm_content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "yclid",
              "displayName": "yclid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "etext",
              "displayName": "etext",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "referrer",
              "displayName": "referrer",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "page_url",
              "displayName": "page_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "page_title",
              "displayName": "page_title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "ts_site_iso",
              "displayName": "ts_site_iso",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "ts_site",
              "displayName": "ts_site",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "pending",
              "displayName": "pending",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "readOnly": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "n8n-nodes-base.dataTable",
      "typeVersion": 1,
      "position": [
        592,
        0
      ],
      "id": "9bf6585d-2a49-4b7a-953a-e45d873bc6d4",
      "name": "Update row(s)"
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Code in JavaScript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript": {
      "main": [
        []
      ]
    },
    "Get row(s)": {
      "main": [
        [
          {
            "node": "Code in JavaScript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": null,
  "pinData": {},
  "versionId": "a4313f7b-4997-4e92-a7f0-0a77993d99bb",
  "triggerCount": 1,
  "shared": [
    {
      "createdAt": "2025-10-07T21:30:12.820Z",
      "updatedAt": "2025-10-07T21:30:12.820Z",
      "role": "workflow:owner",
      "workflowId": "d4D0Fp4pO6Ch7S7C",
      "projectId": "spKmbJLU4mvACXIB"
    }
  ],
  "tags": []
}