{
  "createdAt": "2025-07-01T13:10:00.871Z",
  "updatedAt": "2025-07-11T15:14:42.386Z",
  "id": "XAUPkgr3PHZezumC",
  "name": "Keys list analysis",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {},
      "id": "1208f51e-379b-40e8-a042-42393abc4303",
      "name": "Start",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -640,
        -80
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "url",
              "value": "https://www.dropbox.com/scl/fi/p7jxtw6san1qb9ok4fqxa/From-wordstat2.csv?rlkey=6c8ivto3drjynywe0ka3f14pu&dl=1"
            }
          ]
        },
        "options": {}
      },
      "id": "3186debb-225d-42ae-a791-f4de913194d6",
      "name": "Enter URL",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        -440,
        -80
      ]
    },
    {
      "parameters": {
        "url": "={{$json[\"url\"]}}",
        "responseFormat": "file",
        "options": {}
      },
      "id": "213fdba9-f6a6-4f53-a68f-472651754310",
      "name": "Download File",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        -240,
        -80
      ]
    },
    {
      "parameters": {
        "options": {
          "delimiter": ";"
        }
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -20,
        -80
      ],
      "id": "2e7ef0ca-0ff8-4881-b014-64a21baff617",
      "name": "Extract from File"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "GPT-4O"
        },
        "messages": {
          "values": [
            {
              "content": "={{ $json.prompt }}"
            }
          ]
        },
        "simplify": false,
        "options": {
          "maxToolsIterations": 15
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        780,
        -140
      ],
      "id": "959813d4-6a20-40ad-b79e-8f68ef5f73ea",
      "name": "Message a model",
      "retryOnFail": true,
      "waitBetweenTries": 5000,
      "credentials": {
        "openAiApi": {
          "id": "V8R8KiZKXscJQ1sL",
          "name": "OpenAi account"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        200,
        -80
      ],
      "id": "ae5fc511-9f0c-450f-9cc2-4bfe5d77dcd8",
      "name": "Loop Over Items"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "name": "Replace Me",
      "typeVersion": 1,
      "position": [
        3100,
        20
      ],
      "id": "e823ca41-8a85-4ef1-993b-68bd630ce113"
    },
    {
      "parameters": {
        "amount": 1
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2980,
        -460
      ],
      "id": "785f373d-16f4-464e-a090-7ac61329e55b",
      "name": "Wait",
      "webhookId": "073eaa9b-74dc-4017-b4be-473b7ddcd485"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        1260,
        -420
      ],
      "id": "3b5b463f-d82c-4a50-960d-4a359b1ffacf",
      "name": "Merge"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "de7bc9f0-ea11-49ac-8bc8-0e4469b01ff6",
              "name": "Keep_it",
              "value": "={{ $json.choices[0].message.content === \"true_phrase\" ? true : false }}",
              "type": "boolean"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1420,
        -500
      ],
      "id": "fe275ea4-672e-427e-94a4-55af64f80968",
      "name": "Check result"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0e10b6a7-d524-4fce-8288-527e596dba23",
              "name": "First_part",
              "value": "Есть следующее описание компании KIBERone(филиал в Октябрьском районе Саратова) см. ниже. Необходимо проанализировать фразу:\"",
              "type": "string"
            },
            {
              "id": "ba486f3b-f6d8-4d2d-9e19-3f83f0c18092",
              "name": "Second_part",
              "value": "\" которую задал пользователь в поиске на предмет соответствия услугам, предлагаемым компанией KIBERone. Учитывай то что в поисковых фразах удалены служебные символы и например, вместо C# будет просто C или Си. Если фраза не соответствует цели пользователя к покупке услуг, то необходимо идентифицировать какие именно слова во фразе идентифицируют фразу как нерелевантную(минус слова) . При этом минус слова по отдельности не должны быть релевантными даже в другой словоформе, раскладке клавиатуры или синонимичны предоставляемым услугам или описанию Компании. Если есть сомнения то лучше исключить минус слово. Если есть хоть одно подходящее минус слово которое не пересекается с услугами или описанием компании то возвращаешь минус слово или минус слова(возвращаем только подходящие слова), в противном случае если фраза нерелевантна но подходящих минус слов выделить не получается то верни всю фразу в квадратных скобках. Если фраза подходит то верни true_phrase. Ответ должен содержать строго один из трех вариантов(минус слова разделенные запятой без кавычек, фраза в квадратных скобках. \"true_phrase\"), рассуждения или уточнения в ответе запрещены. Описание компании:  KIBERone – международная КиберШкола программирования и цифровых технологий для детей от 6 до 14 лет.  Позиционирование бренда: KIBERone — первая международная КиберШкола будущего для IT-поколения 6–14 лет, признана ЮНЕСКО лучшей детской образовательной IT-школой в мире. Бренд является партнером Microsoft, Roblox и Samsung. Бесплатные пробные уроки  Основные услуги и программы:  Полный перечень модулей:  Вводный модуль (основы цифровой грамотности)  Основы программирования Scratch Jr  Создание игр на Scratch  ПиктоМир (алгоритмическое мышление)  CodeMonkey (логика и программирование)  Устройство компьютера  Эффектные презентации (PowerPoint, Desygner)  QR-коды  Деловые люди (предпринимательство)  Google Blockly (визуальное программирование)  Roblox Studio (создание игр)  Kodu Game Lab (3D-программирование)  Разработка мобильных приложений в Thunkable  Blender (3D-моделирование)  Компьютерная грамотность  Minecraft Education  Нейросети (основы ИИ)  Alice 3D (3D-программирование)  Run Marco (основы алгоритмов)  Исполнители: Чертёжник и Черепашка  GIF-анимация  Tinkercad (3D-проектирование)  Кибербезопасность  Construct 2 (создание 2D-игр)  Компас-3D (САПР)  Основы HTML (веб-разработка)  Голосовой помощник Алиса  Создание лендинга (Tilda)  Python (создание игр)  Чат-бот на Python  Web-дизайн (Figma)  Web-мастер (HTML+CSS)  Motion Design  Unreal Engine 4 (игровой движок)  JavaScript (игры)  C# (создание 2D-игр)  C++  Java (создание приложений)  Unity 3D (игры)  Олимпиадное программирование  Облачные технологии, Блокчейн, Data Science  PHP+SQL  Photoshop  Подготовка к олимпиадам  Приложения Google  Летние программы:  Летние IT-интенсивы (краткосрочные программы по направлениям Roblox, Minecraft, Python и др.)  Летние КИБЕРканикулы (городской лагерь с IT-обучением и развлекательной программой)  Дополнительные механики:  Кибервалюта («кибероны») для мотивации учеников, обмен на мерч на КиберМаркете  Тьюторы и преподаватели:  Опытные специалисты с практическим опытом и педагогической подготовкой  Другие важные разделы:  Новости (новости школы и сети)  СМИ о нас (публикации о школе)  Фотогалерея (фото с мероприятий и уроков)  Видео (видеоматериалы о школе)  Расписание занятий (время занятий для групп и пробных уроков)  Локации (адрес школы в Октябрьском районе Саратова, ул. Тараса Шевченко, 8)  Оплата (способы оплаты и договор-оферта)  Сертификаты (активация промокодов партнеров)  Контакты (телефон +7 963 112-49-11, email saratov@kiber-one.com",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        400,
        -260
      ],
      "id": "090f1ed0-4020-45ca-960d-e78483ace6d3",
      "name": "Set fixed text"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3a2986b7-fe2d-4cd7-b72f-473d05165f2a",
              "name": "prompt",
              "value": "={{$json.First_part + $json[Object.keys($json)[0]] + $json.Second_part }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        620,
        -260
      ],
      "id": "3a8a1927-8628-4701-80f9-75a08a0f44ae",
      "name": "Combine text"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "097cf8cc-d344-4591-9b80-f7f16dfa6620",
              "leftValue": "={{ $json.choices[0].message.content }}",
              "rightValue": "[",
              "operator": {
                "type": "string",
                "operation": "notContains"
              }
            },
            {
              "id": "60fdafa4-2c5e-4917-978b-dbc1a116f516",
              "leftValue": "={{ $json.choices[0].message.content }}",
              "rightValue": "true_phrase",
              "operator": {
                "type": "string",
                "operation": "notContains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1640,
        -560
      ],
      "id": "9a21e02a-a700-4505-8599-7fd5d1586d68",
      "name": "If"
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "minus_words",
          "mode": "list",
          "cachedResultName": "minus_words"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "minus_word": "={{ $json.minus_word }}",
            "source_key": "={{ $json.name }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "minus_word",
              "displayName": "minus_word",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "source_key",
              "displayName": "source_key",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        2400,
        -620
      ],
      "id": "a9c5a5c4-6ccd-49bd-a41e-8948f8fae897",
      "name": "Insert minus words",
      "credentials": {
        "postgres": {
          "id": "Hx2VFmUi5WO2K4QX",
          "name": "Postgres account 2"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "my_list",
          "mode": "list",
          "cachedResultName": "my_list"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "keep_it": "={{ $json.Keep_it }}",
            "name": "={{$json[Object.keys($json)[0]]}}",
            "count": "={{ $json.Count }}",
            "ai_responce": "={{ $json.choices[0].message.content }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "name",
              "displayName": "name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "count",
              "displayName": "count",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "keep_it",
              "displayName": "keep_it",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            },
            {
              "id": "ai_responce",
              "displayName": "ai_responce",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        2800,
        -480
      ],
      "id": "acfd213c-1a84-4157-acda-6467f92d5e05",
      "name": "Insert all data",
      "credentials": {
        "postgres": {
          "id": "Hx2VFmUi5WO2K4QX",
          "name": "Postgres account 2"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        2600,
        -800
      ],
      "id": "a478c0cb-4af5-43f9-a8fd-ca00a13b9896",
      "name": "Merge with initial data"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5a16826b-adfe-471b-8332-76da5d5a2da3",
              "name": "minus_word",
              "value": "={{ $json.choices[0].message.content.split(/[\\s,]+/).map(item => item.trim()) }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2000,
        -600
      ],
      "id": "2dbc11e1-019c-4031-a8d4-c4fc2566d07c",
      "name": "Split separate words"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "50d50dfa-06ce-4861-aa51-7e142501a6de",
              "name": "choices[0].message.content",
              "value": "яблоко, огурец, банан",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1080,
        -260
      ],
      "id": "10e17ec9-2244-4cfa-bc5a-c6c65b43a309",
      "name": "Dedug",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "// Получаем все входные элементы\nconst items = $input.all();\n\nconst outputItems = [];\n\nitems.forEach(item => {\n  const data = item.json;\n  // Находим ключ Name (учитываем возможный BOM)\n  const nameKey = Object.keys(data).find(k => k.trim().toLowerCase() === 'name');\n  const name = data[nameKey];\n  // Парсим minus_word из строки в массив\n  const minusArray = JSON.parse(data.minus_word);\n\n  // Для каждого минус-слова создаём отдельный выходной элемент\n  minusArray.forEach(minus => {\n    outputItems.push({\n      json: {\n        name: name,\n        minus_word: minus\n      }\n    });\n  });\n});\n\n// Возвращаем результат\nreturn outputItems;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2220,
        -600
      ],
      "id": "ad8126ed-c4e7-4e1c-a770-9f4547ba663c",
      "name": "Code"
    }
  ],
  "connections": {
    "Start": {
      "main": [
        [
          {
            "node": "Enter URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enter URL": {
      "main": [
        [
          {
            "node": "Download File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download File": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message a model": {
      "main": [
        [
          {
            "node": "Dedug",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Set fixed text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Replace Me": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Replace Me",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Check result",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check result": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set fixed text": {
      "main": [
        [
          {
            "node": "Combine text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Combine text": {
      "main": [
        [
          {
            "node": "Message a model",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Merge with initial data",
            "type": "main",
            "index": 0
          },
          {
            "node": "Split separate words",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Insert all data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert minus words": {
      "main": [
        [
          {
            "node": "Merge with initial data",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Insert all data": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge with initial data": {
      "main": [
        [
          {
            "node": "Insert all data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split separate words": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Dedug": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Insert minus words",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "92b4fb4c-72a1-4953-869b-09d03f02f099",
  "triggerCount": 0,
  "shared": [
    {
      "createdAt": "2025-07-01T13:10:00.871Z",
      "updatedAt": "2025-07-01T13:10:00.871Z",
      "role": "workflow:owner",
      "workflowId": "XAUPkgr3PHZezumC",
      "projectId": "spKmbJLU4mvACXIB"
    }
  ],
  "tags": []
}