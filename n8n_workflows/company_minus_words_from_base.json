{
  "createdAt": "2025-09-15T16:12:00.035Z",
  "updatedAt": "2025-10-14T07:53:32.919Z",
  "id": "o5L3i8eq9JK9oLwL",
  "name": "company_minus_words_from_base",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -480,
        -96
      ],
      "id": "a7cee990-ca1e-4f06-9a8c-7eee5568a802",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8a679d23-f5a1-4bda-955e-f03cb1fd40fc",
              "name": "company_id",
              "value": "={{ $('When Executed by Another Workflow').item.json.company_id }}",
              "type": "number"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -704,
        -96
      ],
      "id": "08c83230-67a3-489c-aebc-eee593e5068c",
      "name": "set company_id"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO minus_words (minus_word_embedding, company_id, minus_word)\nVALUES ($1::vector, $2, $3);",
        "options": {
          "queryReplacement": "=[\n  { \"value\": \"={{'[' + JSON.parse($json.minus_word_embedding).map(e => Number(e)).join(',') + ']'}}\" },\n  { \"value\": \"={{$json.company_id}}\" },\n  { \"value\": \"={{$json.minus_word}}\" }\n]"
        }
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -80,
        -80
      ],
      "id": "eec0d635-e445-4ba3-8b46-8a637fa8e478",
      "name": "Execute a SQL query",
      "credentials": {
        "postgres": {
          "id": "4YkdFJcdTgzo9hkz",
          "name": "PGvector"
        }
      }
    },
    {
      "parameters": {
        "content": "тех долг - автоматическая обработка и удаление своих регионов"
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -704,
        -400
      ],
      "id": "5cd1b29c-7c8e-491d-9202-7121e81a5c02",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -1456,
        -96
      ],
      "id": "a78fa162-a3ef-463f-b3db-7a7beed4adf0",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO business_processes_states (business_process_id, company_id,n8n_workflow_execution_id,n8n_workflow_root_execution_id, started)\nSELECT MAX(business_process_id), $2,$3,$4, NOW()\nFROM public.business_processes\nWHERE n8n_process_name = $1;",
        "options": {
          "queryReplacement": "=[{{$workflow.name}},{{$json.company_id}},{{$execution.id}},{{ $('When Executed by Another Workflow').item.json.root_execution_id }}]"
        }
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -1248,
        -96
      ],
      "id": "813d4425-b0f9-47e2-8178-dd8e7e8076b0",
      "name": "Mark_workwlow_started",
      "credentials": {
        "postgres": {
          "id": "4YkdFJcdTgzo9hkz",
          "name": "PGvector"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "update business_processes_states set finished=NOW(),tokens_used=0,steps_passed=1,steps_total=1 where business_process_id=(select MAX(business_process_id) from business_processes where n8n_process_name=$1) and n8n_workflow_execution_id=$2",
        "options": {
          "queryReplacement": "=[{{$workflow.name}},{{$execution.id}}]"
        }
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        144,
        -272
      ],
      "id": "ba3ac614-4ba3-4017-830e-ff6b9481665c",
      "name": "Mark_workflow_completed",
      "executeOnce": true,
      "credentials": {
        "postgres": {
          "id": "4YkdFJcdTgzo9hkz",
          "name": "PGvector"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Function-Node (Run Once)\nconst workflowData = $getWorkflowStaticData('global');\nworkflowData.steps_passed = 0;\nworkflowData.tokens_used = 0;\nworkflowData.step = 0;\nreturn $input.all();\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1088,
        -96
      ],
      "id": "3788d6d1-dc9f-4346-80fc-0c89a0e7024a",
      "name": "Init total counter"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "minus_words_base",
          "mode": "list",
          "cachedResultName": "minus_words_base"
        },
        "returnAll": true,
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -896,
        -96
      ],
      "id": "b0f27d76-135e-46c9-a195-247f906505d1",
      "name": "Get base minus_words",
      "credentials": {
        "postgres": {
          "id": "4YkdFJcdTgzo9hkz",
          "name": "PGvector"
        }
      }
    }
  ],
  "connections": {
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Mark_workflow_completed",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Execute a SQL query",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "set company_id": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute a SQL query": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Mark_workwlow_started",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mark_workwlow_started": {
      "main": [
        [
          {
            "node": "Init total counter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Init total counter": {
      "main": [
        [
          {
            "node": "Get base minus_words",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get base minus_words": {
      "main": [
        [
          {
            "node": "set company_id",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {
    "When Executed by Another Workflow": [
      {
        "json": {
          "company_id": 1,
          "root_execution_id": 74293
        }
      }
    ]
  },
  "versionId": "45b394b3-3550-4512-9490-df4d9b02f88d",
  "triggerCount": 0,
  "shared": [
    {
      "createdAt": "2025-09-15T16:12:00.035Z",
      "updatedAt": "2025-09-15T16:12:00.035Z",
      "role": "workflow:owner",
      "workflowId": "o5L3i8eq9JK9oLwL",
      "projectId": "spKmbJLU4mvACXIB"
    }
  ],
  "tags": []
}