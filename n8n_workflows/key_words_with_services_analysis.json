{
  "createdAt": "2025-09-15T10:20:29.723Z",
  "updatedAt": "2025-09-18T13:15:11.101Z",
  "id": "AEZDBlqe199xBn5u",
  "name": "key_words_with_services_analysis",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {},
      "id": "29a1d3e2-d33a-4fad-b0a4-4611b5eca644",
      "name": "Start",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -704,
        -64
      ]
    },
    {
      "parameters": {
        "options": {
          "reset": "={{ $json.is_first }}"
        }
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        960,
        -32
      ],
      "id": "2c5ad17c-0cd1-493e-98e1-3a09ec97c9b5",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "key_words",
          "mode": "list",
          "cachedResultName": "key_words"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "ai_response_tokens": "={{ $json.total_tokens }}",
            "key_word_id": "={{ $('Loop Over Items').item.json.key_word_id }}",
            "is_relevant": "={{ $json.is_relevant }}"
          },
          "matchingColumns": [
            "key_word_id"
          ],
          "schema": [
            {
              "id": "key_word_id",
              "displayName": "key_word_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "company_id",
              "displayName": "company_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "key_word",
              "displayName": "key_word",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "wordstat_count",
              "displayName": "wordstat_count",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "service_id",
              "displayName": "service_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "wordstat_parsed",
              "displayName": "wordstat_parsed",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "from_wordstat",
              "displayName": "from_wordstat",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "is_relevant",
              "displayName": "is_relevant",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "ai_response_tokens",
              "displayName": "ai_response_tokens",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        5296,
        176
      ],
      "id": "af8350a7-f4b9-46a6-af55-bd16e036abf0",
      "name": "update",
      "credentials": {
        "postgres": {
          "id": "Hx2VFmUi5WO2K4QX",
          "name": "Postgres account 2"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "60fdafa4-2c5e-4917-978b-dbc1a116f516",
              "leftValue": "={{ JSON.parse($json.output[1].content[0].text).is_correct_phrase }}",
              "rightValue": "true_phrase",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3568,
        -128
      ],
      "id": "092ae491-640d-4cf2-b925-bf1d3a7612ef",
      "name": "Обработка ответа AI"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "33090f58-518c-4671-a0cf-22b8b484a226",
              "name": "is_relevant",
              "value": true,
              "type": "boolean"
            },
            {
              "id": "4f2396b9-b5c0-4e30-86c1-df42515df6af",
              "name": "total_tokens",
              "value": "={{ $json.usage.total_tokens }}",
              "type": "number"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4208,
        -256
      ],
      "id": "34f06163-bb73-4f48-9e83-e622c8ef9e54",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "bb72a340-789e-459b-80c9-f1c2b454ed57",
              "name": "is_relevant",
              "value": "false",
              "type": "boolean"
            },
            {
              "id": "f1d5bde6-376a-40f1-b00d-9723628a1553",
              "name": "total_tokens",
              "value": "={{  $json.usage.total_tokens }}",
              "type": "number"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4160,
        -16
      ],
      "id": "3dac86f7-da13-4ef0-acde-a75599a54cd4",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        48,
        -320
      ],
      "id": "9d8263a5-839a-4aa9-b995-2ab07ebfb009",
      "name": "Extract from File1"
    },
    {
      "parameters": {
        "jsCode": "// Function-Node (Run Once)\nconst workflowData = $getWorkflowStaticData('global');\nworkflowData.my_prompt = items[0].json;\nreturn items;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        256,
        -320
      ],
      "id": "ed57f512-0ea6-4629-9610-65367a8314d5",
      "name": "Code1"
    },
    {
      "parameters": {
        "jsCode": "// Function-Node (Run for Each Item)\n\nreturn items.map(item => ({\n  json: { ...$('Loop Over Items').first().json,company_name:$('set variables').item.json.company_name,threshhold:$('set variables').item.json.threshhold }\n}));"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1744,
        -112
      ],
      "id": "a27a95ad-a760-42f9-8779-f307e32568d3",
      "name": "Code2"
    },
    {
      "parameters": {
        "jsCode": "\n\nreturn [{\n  json: \n {\n  \"model\": \"gpt-5\",\n  \"input\": [\n    {\n      \"role\": \"developer\",\n      \"content\": [\n        {\n          \"type\": \"input_text\",\n          \"text\": \"# Role and Objective\\n- You are a search query analysis assistant. Your role is to identify and filter out irrelevant queries for client's services. Validate each input phrase and respond with a structured JSON object.\\n\"\n        }\n      ]\n    },\n    {\n      \"role\": \"user\",\n      \"content\": [\n        {\n          \"type\": \"input_text\",\n          \"text\": $json.my_prompt\n        }\n      ]\n    }\n  ],\n  \"text\": {\n    \"format\": {\n      \"type\": \"json_schema\",\n      \"name\": \"phrase_and_minus_words\",\n      \"strict\": true,\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"is_correct_phrase\": {\n            \"type\": \"boolean\",\n            \"description\": \"Indicates if the phrase is correct.\"\n          }\n        },\n        \"required\": [\n          \"is_correct_phrase\"\n        ],\n        \"additionalProperties\": false\n      }\n    },\n    \"verbosity\": \"low\"\n  },\n  \"reasoning\": {\n    \"effort\": \"low\",\n    \"summary\": \"auto\"\n  },\n  \"tools\": [],\n  \"store\": false,\n  \"include\": [\n    \"reasoning.encrypted_content\",\n    \"web_search_call.action.sources\"\n  ]\n}\n\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3056,
        -112
      ],
      "id": "9d4e32ae-1474-4e3f-b58e-e4aa913ddf1f",
      "name": "Set API JSON"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/responses",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "openAiApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{$json}}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3360,
        -128
      ],
      "id": "3bcda075-a5c3-4b9c-9415-c60a7f32a907",
      "name": "HTTP Request",
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "V8R8KiZKXscJQ1sL",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "xKP6S9XsCeVSgebo",
          "mode": "list",
          "cachedResultName": "Check VS company name SUB"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        2000,
        -112
      ],
      "id": "164f64e6-2677-4461-bcfb-934df3bc2f3b",
      "name": "Find competitors mentions"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "select cs.service_name,cs.service_description,cs.service_id from companies c, company_services cs where c.company_id=cs.company_id and c.company_name=$1",
        "options": {
          "queryReplacement": "{{$json.company_name}}"
        }
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        16,
        -48
      ],
      "id": "1d2328c0-62b2-4b7c-a8d5-0b6c2617ac50",
      "name": "Services list",
      "credentials": {
        "postgres": {
          "id": "Hx2VFmUi5WO2K4QX",
          "name": "Postgres account 2"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "reset": "={{ $json.is_first }}"
        }
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        224,
        -48
      ],
      "id": "7bc94ac0-69f3-4c05-8ebe-fdd7ddefae00",
      "name": "Loop Over services"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "ca56d76f-8158-451b-95b0-48adbef68027",
              "leftValue": "={{ $json.hits}}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2240,
        -80
      ],
      "id": "42f52d0b-a87b-4280-9c94-13857eac4171",
      "name": "If competitors not found"
    },
    {
      "parameters": {
        "jsCode": "const workflowData = $getWorkflowStaticData('global');\nlet my_prompt = workflowData.my_prompt.data;\n\n\n $json.my_prompt = my_prompt.replaceAll(\"{{company_name}}\", $('set variables').first().json.company_name).replaceAll(\"{{service_description}}\", $('Loop Over services').first().json.service_name +' ' + $('Loop Over services').first().json.service_description).replaceAll(\"{{key_word}}\",$('Loop Over Items').first().json.key_word);\n\n\nreturn $input.all();"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2816,
        -112
      ],
      "id": "d942de31-ded4-4797-92fd-5ae54ef01f1f",
      "name": "create prompt"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5b3485a2-cb50-486a-932c-fc27de0a25da",
              "name": "company_name",
              "value": "Первый визовый центр Курган",
              "type": "string"
            },
            {
              "id": "f74ac992-90a4-4403-a75e-17656de76902",
              "name": "company_id",
              "value": 2,
              "type": "number"
            },
            {
              "id": "172a851e-fdc7-4f3c-b095-88687e8a392a",
              "name": "threshhold",
              "value": 0.88,
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -224,
        -48
      ],
      "id": "9e926677-2b92-431c-972a-632b37d3fe04",
      "name": "set variables"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "rmq06a0YRFizRgV1",
          "mode": "list",
          "cachedResultName": "chech phrase VS minus words"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {}
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        1296,
        -48
      ],
      "id": "db488fdf-bb67-461a-b89f-b61668ce355b",
      "name": "Call 'chech phrase VS minus words'"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "15c79f0c-cbc6-4639-81c6-a2f3dc3455aa",
              "leftValue": "={{ $json.matches }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1472,
        -48
      ],
      "id": "5785052d-33b3-4af1-be99-5d06f4eb17f7",
      "name": "If no matches"
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "key_words",
          "mode": "list",
          "cachedResultName": "key_words"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "key_word_id": "={{ $('Loop Over Items').item.json.key_word_id }}",
            "is_relevant": "={{ false }}"
          },
          "matchingColumns": [
            "key_word_id"
          ],
          "schema": [
            {
              "id": "key_word_id",
              "displayName": "key_word_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "company_id",
              "displayName": "company_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "key_word",
              "displayName": "key_word",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "wordstat_count",
              "displayName": "wordstat_count",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "service_id",
              "displayName": "service_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "wordstat_parsed",
              "displayName": "wordstat_parsed",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "from_wordstat",
              "displayName": "from_wordstat",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "is_relevant",
              "displayName": "is_relevant",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "ai_response_tokens",
              "displayName": "ai_response_tokens",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        2864,
        192
      ],
      "id": "6a9b1d3e-fefc-4c1b-9a5b-b14606db9057",
      "name": "Mark non relevant",
      "credentials": {
        "postgres": {
          "id": "Hx2VFmUi5WO2K4QX",
          "name": "Postgres account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "key_words",
          "mode": "list",
          "cachedResultName": "key_words"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "company_id",
              "value": "={{$('set variables').item.json.company_id}}"
            },
            {
              "column": "service_id",
              "value": "={{ $json.service_id }}"
            },
            {
              "column": "is_relevant",
              "condition": "IS NULL"
            }
          ]
        },
        "sort": {
          "values": [
            {
              "column": "key_word_id"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        464,
        -64
      ],
      "id": "f84080d7-02cd-4549-b12f-3b219a5f96b1",
      "name": "Get not processes keys",
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "Hx2VFmUi5WO2K4QX",
          "name": "Postgres account 2"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "value": "Romanychlogin",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "n8n_prompts",
          "mode": "list",
          "cachedResultName": "n8n_prompts",
          "cachedResultUrl": "https://github.com/Romanychlogin/n8n_prompts"
        },
        "filePath": "keyword__with_services_analysis.txt",
        "additionalParameters": {}
      },
      "type": "n8n-nodes-base.github",
      "typeVersion": 1.1,
      "position": [
        -160,
        -320
      ],
      "id": "86f6ad29-3b2b-455b-8703-61e42d1a66c5",
      "name": "Non first run option",
      "webhookId": "78a18071-a275-49af-b46d-76bc691e9e22",
      "credentials": {
        "githubApi": {
          "id": "JQAFAcMNS9Ylyb0V",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        48,
        -496
      ],
      "id": "bd682dcd-cb27-432d-b066-39be4d8f6614",
      "name": "Extract from File"
    },
    {
      "parameters": {
        "jsCode": "// Function-Node (Run Once)\nconst workflowData = $getWorkflowStaticData('global');\nworkflowData.my_prompt = items[0].json;\nreturn items;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        256,
        -496
      ],
      "id": "ba50b723-ffc7-4989-b3e2-c05901dc6cc0",
      "name": "Code"
    },
    {
      "parameters": {
        "content": "Manual route please!!!"
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -560,
        -432
      ],
      "id": "fb97ef7b-89a6-4675-9670-d6b41b221d77",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "value": "Romanychlogin",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "n8n_prompts",
          "mode": "list",
          "cachedResultName": "n8n_prompts",
          "cachedResultUrl": "https://github.com/Romanychlogin/n8n_prompts"
        },
        "filePath": "keyword__with_services_analysis_first.txt",
        "additionalParameters": {}
      },
      "type": "n8n-nodes-base.github",
      "typeVersion": 1.1,
      "position": [
        -160,
        -496
      ],
      "id": "9f81dcd1-334c-4291-9c3f-0a341b508c06",
      "name": "First run option",
      "webhookId": "78a18071-a275-49af-b46d-76bc691e9e22",
      "credentials": {
        "githubApi": {
          "id": "JQAFAcMNS9Ylyb0V",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ebafa31d-edf7-41c0-a06e-e884ad9595ea",
              "name": "is_first",
              "value": "=false",
              "type": "boolean"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1120,
        -48
      ],
      "id": "3ddc9ed9-9c3b-4a79-a59e-05ec5821c26d",
      "name": "reset first_item1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ebafa31d-edf7-41c0-a06e-e884ad9595ea",
              "name": "is_first",
              "value": "=true",
              "type": "boolean"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        816,
        -128
      ],
      "id": "882fb72c-f697-47f0-9799-8c9d2a4c47c7",
      "name": "set first_item"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "ad593e56-742a-4e5a-a72d-7c3410093a54",
              "leftValue": "={{$json}}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        656,
        -64
      ],
      "id": "11832d88-21d7-4d4b-b240-2b5c43bacd7a",
      "name": "If no records"
    },
    {
      "parameters": {
        "content": "remove wordstat_processed"
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        416,
        208
      ],
      "id": "ab7a9be0-a042-4dce-892c-4111df748b45",
      "name": "Sticky Note1"
    }
  ],
  "connections": {
    "Start": {
      "main": [
        [
          {
            "node": "set variables",
            "type": "main",
            "index": 0
          },
          {
            "node": "Non first run option",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Loop Over services",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "reset first_item1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Обработка ответа AI": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "update",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "update",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File1": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        []
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Find competitors mentions",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set API JSON": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Обработка ответа AI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Find competitors mentions": {
      "main": [
        [
          {
            "node": "If competitors not found",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Services list": {
      "main": [
        [
          {
            "node": "Loop Over services",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over services": {
      "main": [
        [],
        [
          {
            "node": "Get not processes keys",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If competitors not found": {
      "main": [
        [
          {
            "node": "create prompt",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Mark non relevant",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "create prompt": {
      "main": [
        [
          {
            "node": "Set API JSON",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "set variables": {
      "main": [
        [
          {
            "node": "Services list",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Call 'chech phrase VS minus words'": {
      "main": [
        [
          {
            "node": "If no matches",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If no matches": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Mark non relevant",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mark non relevant": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get not processes keys": {
      "main": [
        [
          {
            "node": "If no records",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Non first run option": {
      "main": [
        [
          {
            "node": "Extract from File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "First run option": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "reset first_item1": {
      "main": [
        [
          {
            "node": "Call 'chech phrase VS minus words'",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "set first_item": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If no records": {
      "main": [
        [
          {
            "node": "Loop Over services",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "set first_item",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "none",
    "saveExecutionProgress": false,
    "callerPolicy": "workflowsFromSameOwner"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {
    "Start": [
      {
        "json": {}
      }
    ]
  },
  "versionId": "227a2b82-2f50-4513-882b-f2663365edd2",
  "triggerCount": 0,
  "shared": [
    {
      "createdAt": "2025-09-15T10:20:29.723Z",
      "updatedAt": "2025-09-15T10:20:29.723Z",
      "role": "workflow:owner",
      "workflowId": "AEZDBlqe199xBn5u",
      "projectId": "spKmbJLU4mvACXIB"
    }
  ],
  "tags": []
}