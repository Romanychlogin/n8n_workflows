{
  "createdAt": "2025-08-02T18:58:03.132Z",
  "updatedAt": "2025-08-04T09:19:37.551Z",
  "id": "S05zFAC5kmqqmaYm",
  "name": "ADS headers and texts for new",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {},
      "id": "b0907d92-755b-4ac6-8bc2-e34234073c02",
      "name": "Start",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -640,
        -80
      ]
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "GPT-4O"
        },
        "messages": {
          "values": [
            {
              "content": "={{ $json.prompt }}"
            }
          ]
        },
        "simplify": false,
        "options": {
          "maxToolsIterations": 15
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        1552,
        -112
      ],
      "id": "a8e17099-9547-485f-a02c-cf2630af17b3",
      "name": "Message a model",
      "retryOnFail": true,
      "waitBetweenTries": 5000,
      "credentials": {
        "openAiApi": {
          "id": "V8R8KiZKXscJQ1sL",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        416,
        -80
      ],
      "id": "6bfda8f3-3d2f-4aa1-8156-72728f451563",
      "name": "Loop Over Items"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "name": "Replace Me",
      "typeVersion": 1,
      "position": [
        4576,
        32
      ],
      "id": "beb6af22-e60b-46bc-a983-cf5498137b32"
    },
    {
      "parameters": {
        "amount": 1
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        4608,
        -448
      ],
      "id": "c9183e2c-d44a-4dbb-81be-520cb0fcc847",
      "name": "Wait",
      "webhookId": "c8ff2c91-e2bc-4b4b-8e6b-e6f30ebb1ec1"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {
          "includeUnpaired": false
        }
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        2048,
        -400
      ],
      "id": "38eedb28-29c1-43c7-b8c4-951ef0115821",
      "name": "Merge",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0e10b6a7-d524-4fce-8288-527e596dba23",
              "name": "First_part",
              "value": "Есть следующая фраза, заданная пользователем при поиске: \"",
              "type": "string"
            },
            {
              "id": "ba486f3b-f6d8-4d2d-9e19-3f83f0c18092",
              "name": "Second_part",
              "value": "\". Пожалуйста подбери к фразе заголовок рекламного объявления, Текст рекламного объявления и ссылку на релевантную заголовку страницу сайта. Ответ долже содержать только заголовок, текст и ссылку без рассуждений, взятые в квадратные скобки \"[]\". кавычки добавлять не надо . Учитывая то что в исходных фразах удалены все дополнительные символы, такие как #,- и пр. Требования к заголовку: 1)не более 56 символов 2)Заголовок должен максимально соответствовать ключевой фразе.  2)Обязательное требование к заголовку это сохранение всех слов из ключевой фразы. Заголовок должен быть релевантен услугам компании(см. ниже) и уточнять запрос в сторону услуг компании (давать более уточненное понимание сути услуг при этом оставаясь приближенным к исходной фразе), особенно при условии более общего запроса. Заголовок должен начинаться с заглавной буквы. Пожалуйста проверяй чтобы при обрезании под заданное количество символов заголовок оставался осмысленным и добавленное уточнение не дублировало уже имеющиеся во фразе слова. При наличии жаргонизмов или некорректного\\неграмотного написания в исходной фразе в заголовке необходимо корректное написание а также порядок слов.  Текст объявления фиксированный: \"Учим детей создавать игры, сайты и ботов. Запишись на пробный урок бесплатно!\" В ответе необходимо вернуть только запрошенную информацию, запрещено добавлять уточнения типа заголовок, ссылка, текст и пр. Описание компании:  KIBERone – международная Школа программирования и цифровых технологий для детей от 6 до 14 лет.\nОфициальный сайт филиала в Саратове (Октябрьский район): https://saratov-okt.kiber-one.com/\nПозиционирование бренда: KIBERone — первая международная КиберШкола будущего для IT-поколения 6–14 лет, признана ЮНЕСКО лучшей детской образовательной IT-школой в мире. Бренд является партнером Microsoft, Roblox и Samsung. Бесплатные пробные уроки\nОсновные услуги и программы:\nПолный перечень модулей (https://saratov-okt.kiber-one.com/moduli/):\n- Вводный модуль (основы цифровой грамотности) — https://saratov-okt.kiber-one.com/moduli/vvodnyy-modul/\n- Основы программирования Scratch Jr — https://saratov-okt.kiber-one.com/moduli/osnovy-programmirovaniya-scratch-jr/\n- Создание игр на Scratch — https://saratov-okt.kiber-one.com/moduli/modul-2-znakomstvo-so-scratch-sozdanie-igr-na-scratch-osnovy/\n- ПиктоМир (алгоритмическое мышление) — https://saratov-okt.kiber-one.com/moduli/piktomir/\n- CodeMonkey (логика и программирование) — https://saratov-okt.kiber-one.com/moduli/codemonkey-razvivaem-logiku-programmirovaniya-igr/\n- Устройство компьютера — https://saratov-okt.kiber-one.com/moduli/ustroystvo-kompyutera-my-na-ty/\n- Эффектные презентации (PowerPoint, Desygner) — https://saratov-okt.kiber-one.com/moduli/magiya-effektnyh-prezentaciy-powerpoint-i-desygner/\n- QR‑коды — https://saratov-okt.kiber-one.com/moduli/qr-kod-kak-instrument/\n- Деловые люди (предпринимательство) — https://saratov-okt.kiber-one.com/moduli/delovye-lyudi-osnovy-predprinimatelstva-i-proektnoy-deyatelnosti-dlya-detej/\n- Google Blockly (визуальное программирование) — https://saratov-okt.kiber-one.com/moduli/google-blockly-apofeoz-vizualnogo-programmirovaniya/\n- Roblox Studio (создание игр) — https://saratov-okt.kiber-one.com/moduli/roblox-studio-sdelat-vse-chto-vy-mozhete-sebe-predstavit/\n- Kodu Game Lab (3D‑программирование) — https://saratov-okt.kiber-one.com/moduli/kodu-game-lab-vizualnoe-programmirovanie-v-3d/\n- Разработка мобильных приложений в Thunkable — https://saratov-okt.kiber-one.com/moduli/razrabotka-mobilnyh-prilozhenij-v-thunkable-nachalo/\n- Blender (3D‑моделирование) — https://saratov-okt.kiber-one.com/moduli/blender-osnovy-3d-modelirovaniya/\n- Компьютерная грамотность — https://saratov-okt.kiber-one.com/moduli/kompyuternaya-gramotnost/\n- Minecraft Education — https://saratov-okt.kiber-one.com/moduli/minecraft-education/\n- Нейросети (основы ИИ) — https://saratov-okt.kiber-one.com/moduli/neyroseti-znakomstvo-s-osnovami-ii/\n- Alice 3D (3D‑программирование) — https://saratov-okt.kiber-one.com/moduli/alice-3d-izuchenie-3d-programmirovaniya/\n- Run Marco (основы алгоритмов) — https://saratov-okt.kiber-one.com/moduli/run-marco-igra-kvest-dlya-obucheniya-osnovam-algoritmov/\n- Исполнители: Чертёжник и Черепашка — https://saratov-okt.kiber-one.com/moduli/ispolniteli-cherteznik-i-cherepashka/\n- GIF‑анимация — https://saratov-okt.kiber-one.com/moduli/gif-animaciya-sozdanie-prostyh-animacij/\n- Tinkercad (3D‑проектирование) — https://saratov-okt.kiber-one.com/moduli/tinkercad-3d-proektirovanie/\n- Кибербезопасность — https://saratov-okt.kiber-one.com/moduli/kiberbezopasnost-osnovy-informatsionnoj-bezopasnosti/\n- Construct 2 (создание 2D‑игр) — https://saratov-okt.kiber-one.com/moduli/construct-2-sozdai-svoj-pervyj-platformer/\n- Компас‑3D (САПР) — https://saratov-okt.kiber-one.com/moduli/kompas-3d-3d-modelirovanie-sap/\n- Основы HTML (веб‑разработка) — https://saratov-okt.kiber-one.com/moduli/osnovy-html-web-razrabotka/\n- Голосовой помощник Алиса — https://saratov-okt.kiber-one.com/moduli/golosovoj-pomoshhnik-alisa-programmirovanie-navykov-dlya-alisa/\n- Создание лендинга (Tilda) — https://saratov-okt.kiber-one.com/moduli/sozdanie-lendinga-tilda-razrabotka-sajta-na-konstruktor/\n- Python (создание игр) — https://saratov-okt.kiber-one.com/moduli/programmirovanie-v-python-sozdaj-svoju-pervuju-igru/\n- Чат‑бот на Python — https://saratov-okt.kiber-one.com/moduli/umnyj-chat-bot-na-python/\n- Web‑дизайн (Figma) — https://saratov-okt.kiber-one.com/moduli/web-dizayn-figma/\n- Web‑мастер (HTML+CSS) — https://saratov-okt.kiber-one.com/moduli/web-master-html-css/\n- Motion Design — https://saratov-okt.kiber-one.com/moduli/motion-design-animacionnaya-grafika/\n- Unreal Engine 4 (игровой движок) — https://saratov-okt.kiber-one.com/moduli/unreal-engine-4-igrovoj-dvizhok/\n- JavaScript (игры) — https://saratov-okt.kiber-one.com/moduli/programmirovanie-na-javascript-uchimsya-sozdavat-igry/\n- C# (создание 2D‑игр) — https://saratov-okt.kiber-one.com/moduli/programmirovanie-na-csharp-udivitelnyj-mir-2d-igr/\n- C++ — https://saratov-okt.kiber-one.com/moduli/programmirovanie-na-cpp-smozhet-kazhdyj/\n- Java (создание приложений) — https://saratov-okt.kiber-one.com/moduli/programmirovanie-na-java-tvoe-pervoe-prilozhenie/\n- Unity 3D (игры) — https://saratov-okt.kiber-one.com/moduli/mir-trehmernuh-igr-na-unity-3d/\n- Олимпиадное программирование — https://saratov-okt.kiber-one.com/moduli/olimpiadnoe-programmirovanie-podgotovka-k-olimpiadam-po-informatike/\n- Облачные технологии, Блокчейн, Data Science — https://saratov-okt.kiber-one.com/moduli/oblachnye-tehnologii-blokchejn-data-science/\n- PHP+SQL — https://saratov-okt.kiber-one.com/moduli/php-sql-sozdanie-veb-prilozhenij-s-bazami-dannyh/\n- Photoshop — https://saratov-okt.kiber-one.com/moduli/volshebnij-photoshop-graficheskij-dizajn-i-obrabotka-izobrazhenij/\n- Подготовка к олимпиадам — https://saratov-okt.kiber-one.com/moduli/podgotovka-k-olimpiadam-razvitie-navykov-resheniya-slozhnyh-zadach/\n- Приложения Google — https://saratov-okt.kiber-one.com/moduli/prilozheniya-google-35-prilozhenij-ot-google-o-kotoryh-vy-mogli-ne-znat/\nЛетние программы:\n- Летние IT-интенсивы (краткосрочные программы по направлениям Roblox, Minecraft, Python и др.) — https://saratov-okt.kiber-one.com/vybirayte-format-svoego-leta-s-kiberone/letnie-moduli-kiberone/\n- Летние КИБЕРканикулы (городской лагерь с IT-обучением и развлекательной программой) — https://saratov-okt.kiber-one.com/vybirayte-format-svoego-leta-s-kiberone/kiber-kanikuly/\nДополнительные механики:\n- Кибервалюта («кибероны») для мотивации учеников, обмен на мерч на КиберМаркете — https://saratov-okt.kiber-one.com/o-kibershkole/kibervaluta/\nТьюторы и преподаватели:\n- Опытные специалисты с практическим опытом и педагогической подготовкой — https://saratov-okt.kiber-one.com/o-kibershkole/prepodavateli/\nДругие важные разделы:\n- Новости (новости школы и сети) — https://saratov-okt.kiber-one.com/o-kibershkole/news/\n- СМИ о нас (публикации о школе) — https://saratov-okt.kiber-one.com/o-kibershkole/smi-o-nas/\n- Фотогалерея (фото с мероприятий и уроков) — https://saratov-okt.kiber-one.com/o-kibershkole/fotogalereya/\n- Видео (видеоматериалы о школе) — https://saratov-okt.kiber-one.com/o-kibershkole/video/\n- Расписание занятий (время занятий для групп и пробных уроков) — https://saratov-okt.kiber-one.com/o-kibershkole/raspisanie/\n- Локации (адрес школы в Октябрьском районе Саратова, ул. Тараса Шевченко, 8) — https://saratov-okt.kiber-one.com/o-kibershkole/lokacii/\n- Оплата (способы оплаты и договор-оферта) — https://saratov-okt.kiber-one.com/oplata/\n- Сертификаты (активация промокодов партнеров) — https://saratov-okt.kiber-one.com/sertifikaty/\n- Контакты (email saratov@kiber-one.com) — https://saratov-okt.kiber-one.com/feedback/",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1040,
        -256
      ],
      "id": "0fa1c457-2f90-4a2c-a813-bf82f3c08e2b",
      "name": "Set fixed text"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3a2986b7-fe2d-4cd7-b72f-473d05165f2a",
              "name": "prompt",
              "value": "={{$json.First_part + $json.key_word + $json.Second_part }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1264,
        -256
      ],
      "id": "4b20ab03-c828-4f8f-a1a8-672fcd97c2a6",
      "name": "Combine text"
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "current_ads_list",
          "mode": "list",
          "cachedResultName": "current_ads_list"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "key_words": "={{$json.key_word}}",
            "ad_header": "={{$json[\"AD_Header\"]}}",
            "ad_text": "={{$json[\"AD_Text\"]}}",
            "ad_url": "={{$json[\"AD_URL\"]}}",
            "group_id": 0
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "ad_id",
              "displayName": "ad_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "group_name",
              "displayName": "group_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "key_words",
              "displayName": "key_words",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "ad_header",
              "displayName": "ad_header",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "ad_text",
              "displayName": "ad_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "group_id",
              "displayName": "group_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "ad_url",
              "displayName": "ad_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        4400,
        -464
      ],
      "id": "492c71ad-e5fb-4975-994f-7d0bd0906012",
      "name": "Insert all data",
      "credentials": {
        "postgres": {
          "id": "Hx2VFmUi5WO2K4QX",
          "name": "Postgres account 2"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e1b96601-333a-4fcd-8e9b-809f3f4057ed",
              "name": "=AD_Header",
              "value": "={{ $json.choices[0].message.content.match(/\\[([^\\]]+)\\]/g)?.[0]?.slice(1, -1) }}",
              "type": "string"
            },
            {
              "id": "65a15095-e1e7-4960-b4c7-29de83474093",
              "name": "=AD_Text",
              "value": "={{ $json.choices[0].message.content.match(/\\[([^\\]]+)\\]/g)?.[1]?.slice(1, -1) }}",
              "type": "string"
            },
            {
              "id": "7f40c4a0-801b-41ea-a26e-54cec58cb6f2",
              "name": "=AD_URL",
              "value": "={{ $json.choices[0].message.content.match(/\\[([^\\]]+)\\]/g)?.[2]?.slice(1, -1) }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2224,
        -464
      ],
      "id": "b6361fb9-b7d2-46df-87eb-7f575b4e2bdb",
      "name": "Add Header and AD_Text"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "709a3228-ca19-4663-8c74-5be612fe4cba",
              "leftValue": "={{ $json.AD_URL }}",
              "rightValue": "https://saratov-okt.kiber-one.com",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "567449b5-599d-452e-a7e5-7ea1a9932222",
              "leftValue": "={{ $json.AD_Text }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "b48ff7a5-fd87-4ebe-aa40-c8eb5d13020d",
              "leftValue": "={{ $json.AD_Header }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2448,
        -464
      ],
      "id": "ddad65fc-4c46-4f89-8299-c60d67baa97c",
      "name": "Data validity check"
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "errors",
          "mode": "list",
          "cachedResultName": "errors"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "responce ": "={{ $json.choices[0].message.content }}",
            "comment": "={{$json.key_word}}",
            "list_num": "={{$node[\"Loop Over Items\"].context[\"currentRunIndex\"]}}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "responce ",
              "displayName": "responce ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "comment",
              "displayName": "comment",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "list_num",
              "displayName": "list_num",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        3840,
        -368
      ],
      "id": "63eea7fe-1c79-4024-83c0-232f9c9bec24",
      "name": "Error log",
      "credentials": {
        "postgres": {
          "id": "Hx2VFmUi5WO2K4QX",
          "name": "Postgres account 2"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "50d50dfa-06ce-4861-aa51-7e142501a6de",
              "name": "choices[0].message.content",
              "value": "[Языки программирования для детей: курсы в KIBERone](https://saratov-okt.kiber-one.com/) [Учим детей создавать игры, сайты и ботов. Запишись на пробный урок бесплатно!] ",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1888,
        -224
      ],
      "id": "61c23c42-6625-4d16-aa9b-cb5223dcb2e3",
      "name": "Dedug",
      "disabled": true
    },
    {
      "parameters": {
        "content": "добавить проверку на длину полей. Сейчас косячит!\nВ одном случае дописал в конце \"\\\\\"\nУточнить что нельзя использовать символ \"‑\" в заголовке\n",
        "height": 380,
        "width": 420
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2320,
        -816
      ],
      "id": "18936453-00e3-4b09-8b82-8cbbb778d7b9",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "current_list",
          "mode": "list",
          "cachedResultName": "current_list"
        },
        "where": {
          "values": [
            {
              "column": "resolution",
              "value": "to add"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -240,
        -80
      ],
      "id": "49785083-7ebd-4ba1-a147-e6c0665ef246",
      "name": "Select rows from a table",
      "credentials": {
        "postgres": {
          "id": "Hx2VFmUi5WO2K4QX",
          "name": "Postgres account 2"
        }
      }
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "Xtz8tIR3qb5gVRIG",
          "mode": "list",
          "cachedResultName": "current links and  data review"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        1008,
        -528
      ],
      "id": "7f8dee82-b0a6-4a6b-a7eb-6a29066e4864",
      "name": "Execute Workflow"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "79xVxSnjOGwvwmIb",
          "mode": "list",
          "cachedResultName": "current ADS headers and texts creation - duplicate key in text copy"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        624,
        -176
      ],
      "id": "bab5b8cb-74b0-4530-bd53-54c5253ffa98",
      "name": "Execute Workflow1"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "WITH max_group AS (\n  SELECT COALESCE(MAX(group_id), 0) + 1 AS start_group_id FROM ads_list\n),\nseq AS (\n  SELECT\n    ctid,\n    ROW_NUMBER() OVER (ORDER BY ad_header) AS rn\n  FROM (\n    SELECT DISTINCT ON (ad_header) ad_header, ctid\n    FROM current_ads_list\n    ORDER BY ad_header, ctid\n  ) t\n)\nUPDATE current_ads_list AS dst\nSET\n  group_id   = seq.rn + max_group.start_group_id - 1,\n  group_name = dst.ad_header\nFROM seq, max_group\nWHERE dst.ctid = seq.ctid;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1184,
        -528
      ],
      "id": "76076b5f-08b5-421a-9f2a-16fafc072be9",
      "name": "Execute a SQL query",
      "credentials": {
        "postgres": {
          "id": "Hx2VFmUi5WO2K4QX",
          "name": "Postgres account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "current_ads_list",
          "mode": "list",
          "cachedResultName": "current_ads_list"
        },
        "returnAll": true,
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1392,
        -528
      ],
      "id": "4f5f02ac-49c0-413a-aa32-6684335f1673",
      "name": "Select rows from a table1",
      "credentials": {
        "postgres": {
          "id": "Hx2VFmUi5WO2K4QX",
          "name": "Postgres account 2"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "ads_list",
          "mode": "list",
          "cachedResultName": "ads_list"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "group_id": "={{ $json.group_id }}",
            "group_name": "={{ $json.group_name }}",
            "key_words": "={{ $json.key_words }}",
            "ad_header": "={{ $json.ad_header }}",
            "ad_text": "={{ $json.ad_text }}",
            "ad_url": "={{ $json.ad_url }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "ad_id",
              "displayName": "ad_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "group_name",
              "displayName": "group_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "key_words",
              "displayName": "key_words",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "ad_header",
              "displayName": "ad_header",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "ad_text",
              "displayName": "ad_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "group_id",
              "displayName": "group_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "ad_url",
              "displayName": "ad_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1600,
        -528
      ],
      "id": "8d489daf-729c-439c-8431-49dcd64a93bd",
      "name": "Insert rows in a table",
      "credentials": {
        "postgres": {
          "id": "Hx2VFmUi5WO2K4QX",
          "name": "Postgres account 2"
        }
      }
    }
  ],
  "connections": {
    "Start": {
      "main": [
        [
          {
            "node": "Select rows from a table",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message a model": {
      "main": [
        [
          {
            "node": "Dedug",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Execute Workflow1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set fixed text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Replace Me": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Replace Me",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Add Header and AD_Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set fixed text": {
      "main": [
        [
          {
            "node": "Combine text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Combine text": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          },
          {
            "node": "Message a model",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert all data": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add Header and AD_Text": {
      "main": [
        [
          {
            "node": "Data validity check",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Data validity check": {
      "main": [
        [
          {
            "node": "Insert all data",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error log",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error log": {
      "main": [
        [
          {
            "node": "Replace Me",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Dedug": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Select rows from a table": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow1": {
      "main": [
        [
          {
            "node": "Execute Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow": {
      "main": [
        [
          {
            "node": "Execute a SQL query",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute a SQL query": {
      "main": [
        [
          {
            "node": "Select rows from a table1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Select rows from a table1": {
      "main": [
        [
          {
            "node": "Insert rows in a table",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "214d0a26-961b-4280-b31c-e3d641514572",
  "triggerCount": 0,
  "shared": [
    {
      "createdAt": "2025-08-02T18:58:03.132Z",
      "updatedAt": "2025-08-02T18:58:03.132Z",
      "role": "workflow:owner",
      "workflowId": "S05zFAC5kmqqmaYm",
      "projectId": "spKmbJLU4mvACXIB"
    }
  ],
  "tags": []
}