{
  "createdAt": "2025-09-30T17:56:19.098Z",
  "updatedAt": "2025-10-24T07:59:41.309Z",
  "id": "UUlsZU9GOCmdvDHg",
  "name": "extract data for updates with header",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "operation": "xlsx",
        "options": {
          "fileName": "output.xlsx",
          "headerRow": false
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        1456,
        -80
      ],
      "id": "f01b45d2-eae8-43cf-826b-8e9fc600423b",
      "name": "Convert to File"
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "path": "=/output_id{{ $('select company data').last().json.company_id }}_camp_{{ $('select ads data').last().json.campaign_id }}_{{ $('select company data').last().json.start_date }}_{{ $('select company data').last().json.end_date }}.xlsx",
        "binaryData": true
      },
      "type": "n8n-nodes-base.dropbox",
      "typeVersion": 1,
      "position": [
        2864,
        -48
      ],
      "id": "b481d235-879e-4fb6-8731-744f3bc50137",
      "name": "Upload a file",
      "credentials": {
        "dropboxOAuth2Api": {
          "id": "AugpA5e12rWISfZ5",
          "name": "Dropbox OAuth"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e22ad154-2123-49fe-9e5a-c7fe836825f8",
              "name": "add_adv",
              "value": "={{ $json.add_adv }}",
              "type": "string"
            },
            {
              "id": "4262c0ff-c141-4fde-aebe-187481d9d0df",
              "name": "ADV_type",
              "value": "Текстово-графическое",
              "type": "string"
            },
            {
              "id": "a11661b9-dc1c-4750-b93f-ba5b74836562",
              "name": "mob",
              "value": "-",
              "type": "string"
            },
            {
              "id": "e1100e5c-4c72-456e-b2ec-55f0f536bff1",
              "name": "group_uid",
              "value": "",
              "type": "string"
            },
            {
              "id": "d9b1b21a-f230-41db-af85-b9bbcb554ee4",
              "name": "group_name",
              "value": "={{ $json.group_name }}",
              "type": "string"
            },
            {
              "id": "c0cb504d-2b55-4c1f-a628-80b7a369a078",
              "name": "group_id",
              "value": "=",
              "type": "string"
            },
            {
              "id": "5c643aae-d54d-4ad8-aee2-f5114f35f078",
              "name": "id_phrase",
              "value": " ",
              "type": "string"
            },
            {
              "id": "1df69495-ac3c-4f36-ac5d-5a014914feb0",
              "name": "key_words",
              "value": "={{ $json.key_word }}",
              "type": "string"
            },
            {
              "id": "4455b796-76dd-4789-b04d-51f793ae70f1",
              "name": "id_adv",
              "value": "",
              "type": "string"
            },
            {
              "id": "b308d9ca-9676-4837-a7b0-3512c73bf481",
              "name": "ad_header",
              "value": "={{ $json.ad_header }}",
              "type": "string"
            },
            {
              "id": "559ee132-e1dd-444b-9f9e-d87e5e8b1974",
              "name": "ad_header2",
              "value": "={{$json.cleaned_service_name}}",
              "type": "string"
            },
            {
              "id": "04f85c2c-a0b8-4ff8-9715-8ca7c329976e",
              "name": "ad_text",
              "value": "={{ $json.ad_text }}",
              "type": "string"
            },
            {
              "id": "4219b151-e444-4094-81c0-519c5352de8e",
              "name": "empty_1",
              "value": "",
              "type": "string"
            },
            {
              "id": "f18d9f2a-05a4-4294-be69-17504b51bacc",
              "name": "empty_2",
              "value": "",
              "type": "string"
            },
            {
              "id": "a312e417-8674-4cc4-84c2-efc3b997c5cc",
              "name": "empty_3",
              "value": "",
              "type": "string"
            },
            {
              "id": "61c57fa1-7755-4bf4-b39f-3369363114f6",
              "name": "ad_url",
              "value": "={{ $json.ad_url }}",
              "type": "string"
            },
            {
              "id": "e3a249d0-8ec2-4d1e-91c6-32affb8b0734",
              "name": " display_url",
              "value": "",
              "type": "string"
            },
            {
              "id": "c060b10e-692d-4334-8efa-6f7caf10a9f7",
              "name": "company_id",
              "value": "={{ $('select company data').first().json.yandex_id }}",
              "type": "string"
            },
            {
              "id": "8fe20bbd-a870-40f5-9798-4546e9ad1d5e",
              "name": "empty_4",
              "value": "",
              "type": "string"
            },
            {
              "id": "886783a2-ee5e-43c6-93ff-2e5c4f96fb8f",
              "name": "region",
              "value": "={{ $('select company data').first().json.yandex_region }}",
              "type": "string"
            },
            {
              "id": "c62dd54c-0098-4a3b-8d48-69e150b13099",
              "name": "auto_bid",
              "value": "={{ $json.service_bid}}",
              "type": "string"
            },
            {
              "id": "e7a8750e-09ea-46b6-8d5a-c38e3e4e46ca",
              "name": "bid",
              "value": "={{ $json.service_bid}}",
              "type": "string"
            },
            {
              "id": "709b74a4-3b63-4de3-a770-ec0a222fa1ca",
              "name": "any_bid",
              "value": "",
              "type": "string"
            },
            {
              "id": "a6323208-755b-448d-b758-6ac2468b219c",
              "name": "status_adv",
              "value": "",
              "type": "string"
            },
            {
              "id": "6544b633-314b-4bbd-9c03-cfdf0f3f6a42",
              "name": "status_phrase",
              "value": "",
              "type": "string"
            },
            {
              "id": "6cf0d95e-3466-40a9-a087-c391edbcb689",
              "name": "ql_header",
              "value": "={{ $('Get quick links').last().json.link_headers_text }}",
              "type": "string"
            },
            {
              "id": "6fa5a4f7-6748-4308-947d-3ca9fff0d683",
              "name": "ql_descr",
              "value": "={{ $('Get quick links').last().json.link_descriptions_text }}",
              "type": "string"
            },
            {
              "id": "68076cc7-a932-4ade-9fea-2bce6a746e1e",
              "name": "ql_url",
              "value": "={{ $('Get quick links').last().json.link_urls_text }}",
              "type": "string"
            },
            {
              "id": "cf064340-5dcd-42ef-9bc1-daf936498182",
              "name": "var1",
              "value": "",
              "type": "string"
            },
            {
              "id": "70d673fa-5cb1-4572-b854-7d71fc66bbf9",
              "name": "var2",
              "value": "",
              "type": "string"
            },
            {
              "id": "8b33703f-dae2-4a13-8d3a-09a3747b6948",
              "name": "marks",
              "value": "",
              "type": "string"
            },
            {
              "id": "22514bdb-a687-4d6c-9d0b-26cf805f0ea9",
              "name": "picture",
              "value": "",
              "type": "string"
            },
            {
              "id": "05563fba-5435-4de8-aacb-325389522cd4",
              "name": "creativity",
              "value": "",
              "type": "string"
            },
            {
              "id": "c0549447-7497-418f-8330-3b49fb95408f",
              "name": "moderation",
              "value": "",
              "type": "string"
            },
            {
              "id": "aa74e979-1aed-47b6-b889-90869a6c810e",
              "name": "callouts",
              "value": "={{ $('Get callouts').last().json.link_callout_text }}",
              "type": "string"
            },
            {
              "id": "a747f119-5c77-4a74-9553-2bf36105b7f9",
              "name": "minus_words",
              "value": "",
              "type": "string"
            },
            {
              "id": "13ebe78e-0360-4c8a-b98c-c9d8875ab5de",
              "name": "age_limit",
              "value": "6",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1120,
        -80
      ],
      "id": "53b9c994-d82d-4051-b03a-357724c272e3",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT ad.*, cs1.service_bid, regexp_replace(\n    cs1.service_name,\n    '[^a-zA-Zа-яА-ЯёЁ ]',\n    '',\n    'g'\n) AS cleaned_service_name,cs1.count_clics\nFROM current_ads_list AS ad\nLEFT JOIN LATERAL (\n    SELECT cs.service_bid,cs.service_name, COALESCE(kw.count_clics,0) as count_clics\n    FROM current_list kw\n    JOIN company_services cs\n      ON cs.service_id = kw.service_id\n     AND cs.company_id = ad.company_id       -- если есть привязка к компании — рекомендую\n    WHERE kw.list_id = ad.list_id  \n    ORDER BY cs.service_bid DESC NULLS LAST  -- критерий выбора ОДНОЙ записи\n    LIMIT 1\n) AS cs1 ON TRUE\n\nWHERE ad.company_id = $1 AND ad.need_check=false order by service_name,count_clics desc;",
        "options": {
          "queryReplacement": "={{ $json.company_id }}"
        }
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        240,
        -64
      ],
      "id": "16819f54-d4a3-4020-994a-9cdba0646688",
      "name": "select ads data",
      "credentials": {
        "postgres": {
          "id": "Hx2VFmUi5WO2K4QX",
          "name": "Postgres account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "select c.*, ((ri.start_date AT TIME ZONE 'UTC')::date)::text as start_date,((ri.end_date AT TIME ZONE 'UTC')::date)::text as end_date from companies c, report_import ri where c.company_id=c.company_id and c.company_id=$1 and ri.import_id=$2",
        "options": {
          "queryReplacement": "={{ $('When Executed by Another Workflow').item.json.company_id }},{{ $('When Executed by Another Workflow').item.json.import_id }}"
        }
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -96,
        -64
      ],
      "id": "96c57c21-ef6a-4ed7-87d3-2594efbb56f3",
      "name": "select company data",
      "credentials": {
        "postgres": {
          "id": "Hx2VFmUi5WO2K4QX",
          "name": "Postgres account 2"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// === настройки ===\nconst BATCH_SIZE = 50;\n\n// все входные элементы\nconst inputItems = $input.all();           // [{ json: {...} }, ...]\nconst rows = inputItems.map(i => i.json);\n\n// 1) группируем по cleaned_service_name (сохраняем порядок появления)\nconst byService = new Map();\nfor (const rec of rows) {\n  const key = rec.cleaned_service_name ?? '';\n  if (!byService.has(key)) byService.set(key, []);\n  byService.get(key).push(rec);\n}\n\nconst out = [];\n\n// 2) по каждой группе режем на пачки ≤ 50\nfor (const [serviceName, list] of byService.entries()) {\n  for (let offset = 0, batchNo = 1; offset < list.length; offset += BATCH_SIZE, batchNo++) {\n    const batch = list.slice(offset, offset + BATCH_SIZE);\n    if (batch.length === 0) continue;\n    const serviceNameDate=serviceName+'_'+$('select company data').first().json.start_date+'_'+$('select company data').first().json.end_date;\n    const groupName = `${serviceNameDate}_${batchNo}`;\n\n    // Берём шаблон из первой записи пачки\n    const first = batch[0] ?? {};\n    const templateHeader = first.ad_header;\n    const templateText   = first.ad_text;\n    const templateUrl    = first.ad_url;\n\n    // 2.1) ОРИГИНАЛЬНЫЕ записи пачки:\n    //     ad_header/ad_text/ad_url = из первой записи пачки\n    for (const rec of batch) {\n      out.push({\n        json: {\n          ...rec,\n          group_name: groupName,\n          ad_header: templateHeader,\n          ad_text:   templateText,\n          ad_url:    templateUrl,\n          add_adv:'-'\n        },\n      });\n    }\n\n    // 2.2) Дубликаты всех, КРОМЕ первой, с пустым key_word\n    for (let i = 1; i < batch.length; i++) {\n      out.push({\n        json: {\n          ...batch[i],\n          group_name: groupName,\n          key_word: '', // очищаем только key_words\n          add_adv:'+'\n        },\n      });\n    }\n  }\n}\n\nreturn out;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        592,
        -192
      ],
      "id": "8a20bdc0-26f0-48a8-a962-4ff2b49c80bd",
      "name": "Code in JavaScript"
    },
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -1008,
        16
      ],
      "id": "8beb55ec-60d2-46a3-842d-2113e27efdab",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO business_processes_states (business_process_id, company_id,n8n_workflow_execution_id,n8n_workflow_root_execution_id, started)\nSELECT MAX(business_process_id), $2,$3,$4, NOW()\nFROM public.business_processes\nWHERE n8n_process_name = $1;",
        "options": {
          "queryReplacement": "=[{{$workflow.name}},{{$json.company_id}},{{$execution.id}},{{ $('When Executed by Another Workflow').item.json.root_execution_id }}]"
        }
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -528,
        -32
      ],
      "id": "ca2edbb3-ee5f-42c0-a8e6-71ee04fbfbd1",
      "name": "Mark_workwlow_started",
      "credentials": {
        "postgres": {
          "id": "4YkdFJcdTgzo9hkz",
          "name": "PGvector"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        2016,
        -48
      ],
      "id": "9aa4f336-7e95-4bdf-9fee-405847ce75b2",
      "name": "Merge"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "280083b6-06ad-4a7b-9901-0b620e166437",
              "name": "path",
              "value": "https://www.dropbox.com/scl/fi/u8qppd514in2neu7fkjnd/702142188_example.xlsx?rlkey=1rt8hutw556avhy5ahqtvj7w8&dl=1",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        672,
        240
      ],
      "id": "1cde0995-75f3-4bee-949a-1ced75d68421",
      "name": "set template path"
    },
    {
      "parameters": {
        "url": "={{$json.path}}",
        "responseFormat": "file",
        "options": {}
      },
      "id": "32181324-eb18-4007-9837-66c20cd1d736",
      "name": "Download File",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        1040,
        288
      ]
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "target.xlsx",
        "options": {
          "append": false
        }
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        1664,
        -80
      ],
      "id": "ac2619a8-f9bb-4862-a2ed-ac37f73009d6",
      "name": "Read/Write Files from Disk"
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "template.xlsx",
        "options": {
          "append": false
        }
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        1296,
        288
      ],
      "id": "f908967b-84a2-4607-96ea-c5b14af7593c",
      "name": "Read/Write Files from Disk1"
    },
    {
      "parameters": {
        "fileSelector": "=output.xlsx",
        "options": {
          "dataPropertyName": "data"
        }
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        2432,
        -48
      ],
      "id": "67ba370d-0684-4fe6-8a84-a2a35e0f5ac0",
      "name": "Read/Write Files from Disk2"
    },
    {
      "parameters": {
        "command": "if [ ! -f package.json ]; then npm init -y >/dev/null 2>&1; fi\nif [ ! -d node_modules/exceljs ]; then npm i exceljs >/dev/null 2>&1; fi"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -48,
        480
      ],
      "id": "24acbe67-b547-4d6a-b1e5-c5d9eae3d48d",
      "name": "Set package"
    },
    {
      "parameters": {
        "command": "cat > xlsx_apply_template.js <<'EOF'\nconst ExcelJS = require('exceljs');\n\n/*\nЗапуск:\nnode xlsx_apply_template.js \\\n  /data/in/template.xlsx \\\n  /data/in/target.xlsx \\\n  /data/out/output_with_header.xlsx \\\n  12 1 1 \\\n  \"СТРОКА_ДЛЯ_E8\" \\\n  \"СТРОКА_ДЛЯ_E9\" \\\n  false\n\nАргументы:\n 2: templatePath\n 3: targetPath\n 4: outPath\n 5: HEADER_ROWS (по умолчанию 12 → данные начнутся со строки 13)\n 6: templateSheetIndex (1-based)\n 7: targetSheetIndex   (1-based)\n 8: e8Value (string)\n 9: e9Value (string)\n10: CLEAR_BELOW (\"true\"/\"false\"; по умолчанию false)\n*/\n\nconst templatePath = process.argv[2];\nconst targetPath   = process.argv[3];\nconst outPath      = process.argv[4];\nconst HEADER_ROWS  = parseInt(process.argv[5] || '12', 10);\nconst templateSheetIndex = parseInt(process.argv[6] || '1', 10);\nconst targetSheetIndex   = parseInt(process.argv[7] || '1', 10);\nconst e8Value     = process.argv[8] || '';\nconst e9Value     = process.argv[9] || '';\nconst CLEAR_BELOW = String(process.argv[10] || 'false').toLowerCase() === 'true';\n\n(async () => {\n  const wbTpl = new ExcelJS.Workbook();\n  await wbTpl.xlsx.readFile(templatePath);\n  const wsTpl = wbTpl.getWorksheet(templateSheetIndex);\n  if (!wsTpl) throw new Error('Template worksheet not found');\n\n  const wbSrc = new ExcelJS.Workbook();\n  await wbSrc.xlsx.readFile(targetPath);\n  const wsSrc = wbSrc.getWorksheet(targetSheetIndex);\n  if (!wsSrc) throw new Error('Target worksheet not found');\n\n  const startRow = HEADER_ROWS + 1;\n\n  if (CLEAR_BELOW) {\n    const toDelete = Math.max(0, (wsTpl.rowCount || 0) - HEADER_ROWS);\n    if (toDelete > 0) wsTpl.spliceRows(startRow, toDelete);\n  }\n\n// стало:\nconst maxRow = wsSrc.rowCount || 0;\n\n// находим самый правый непустой столбец, проходя по всем строкам\nlet maxCol = 0;\nwsSrc.eachRow({ includeEmpty: true }, (row) => {\n  // ищем последнюю непустую ячейку в строке\n  // exceljs хранит массив row._cells; безопасно проверить value\n  for (let i = row.cellCount; i >= 1; i--) {\n    const cell = row.getCell(i);\n    if (cell && cell.value !== null && cell.value !== undefined && cell.value !== '') {\n      if (i > maxCol) maxCol = i;\n      break;\n    }\n  }\n});\n\n  for (let r = 1; r <= maxRow; r++) {\n    const srcRow = wsSrc.getRow(r);\n    const dstRow = wsTpl.getRow(startRow + r - 1);\n    for (let c = 1; c <= maxCol; c++) {\n      const srcCell = srcRow.getCell(c);\n      const dstCell = dstRow.getCell(c);\n      dstCell.value = srcCell.value;\n      if (srcCell.numFmt) dstCell.numFmt = srcCell.numFmt;\n    }\n    if (dstRow.commit) dstRow.commit();\n  }\n\n  // Устанавливаем E8 и E9 после вставки\n  wsTpl.getCell('E8').value = e8Value;\n  wsTpl.getCell('E9').value = e9Value;\n\n  await wbTpl.xlsx.writeFile(outPath);\n  process.stdout.write(outPath);\n})().catch(e => { console.error(e); process.exit(1); });\nEOF"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        400,
        528
      ],
      "id": "0da68622-f5d3-495d-8a4b-2dd87d61e499",
      "name": "set script"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "update business_processes_states set finished=NOW(),tokens_used=0,steps_passed=1,steps_total=1 where business_process_id=(select MAX(business_process_id) from business_processes where n8n_process_name=$1) and n8n_workflow_execution_id=$2",
        "options": {
          "queryReplacement": "=[{{$workflow.name}},{{$execution.id}}]"
        }
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        3360,
        -48
      ],
      "id": "fd0c474e-3c85-49da-8b04-974c678d19c7",
      "name": "Mark_workflow_completed",
      "executeOnce": true,
      "credentials": {
        "postgres": {
          "id": "4YkdFJcdTgzo9hkz",
          "name": "PGvector"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Function-Node (Run Once)\nconst workflowData = $getWorkflowStaticData('global');\nworkflowData.steps_passed = 0;\nworkflowData.tokens_used = 0;\nworkflowData.step = 0;\nreturn $input.all();\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3136,
        -48
      ],
      "id": "ce44d4a7-1ea3-4902-b717-bc24301b7400",
      "name": "Init total counter"
    },
    {
      "parameters": {
        "command": "=node xlsx_apply_template.js \\\n  template.xlsx \\\n  target.xlsx \\\n  output.xlsx \\\n  12 1 1 \\\n  \"{{ $('select ads data').last().json.campaign_id }}\" \\\n  \"{{$('When Executed by Another Workflow').first().json.minus_words}}\" \\\n  true"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        2224,
        -48
      ],
      "id": "f6e7cc99-94ef-42fb-b65f-795c421487f9",
      "name": "Merge file header"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8a620429-eda9-44aa-ae9e-488adbdae407",
              "leftValue": "={{ $json.stdout }}",
              "rightValue": "1",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -288,
        304
      ],
      "id": "65723235-66e2-4693-b508-5c7be2939b4d",
      "name": "If script already created"
    },
    {
      "parameters": {
        "command": "[ -f \"xlsx_apply_template.js\" ] && echo 1 || echo 0"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -624,
        288
      ],
      "id": "0a730af9-b945-4ab0-a59b-7965db6bc247",
      "name": "check if script exists"
    },
    {
      "parameters": {
        "content": "Используется локальный JS script чтобы использовать подключаемую библиотеку и не разбираться с правами. Скрипт деплоится на машину и пересоздается после каджого редиплоя"
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -688,
        448
      ],
      "id": "c09dd066-4f5c-485c-b6ac-008bdba1cd48",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT\n  string_agg(NULLIF(btrim(ql.link_header), ''),      '||' ORDER BY link_id) AS link_headers_text,\n  string_agg(NULLIF(btrim(ql.link_description), ''), '||' ORDER BY link_id) AS link_descriptions_text,\n  string_agg(NULLIF(btrim(ql.link_url), ''),         '||' ORDER BY link_id) AS link_urls_text\nFROM public.adv_campaign_quick_links ql  where ql.campaign_id=$1;",
        "options": {
          "queryReplacement": "={{ $json.campaign_id }}"
        }
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        544,
        96
      ],
      "id": "85334352-4cf0-46d8-a7da-795b5cf1de0b",
      "name": "Get quick links",
      "executeOnce": true,
      "credentials": {
        "postgres": {
          "id": "Hx2VFmUi5WO2K4QX",
          "name": "Postgres account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT\n  string_agg(NULLIF(btrim(ql.callout_text), ''),      '||' ORDER BY callout_id) AS link_callout_text\n  \nFROM adv_campaign_callouts ql  where ql.campaign_id=$1;",
        "options": {
          "queryReplacement": "={{ $('select ads data').item.json.campaign_id }}"
        }
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        736,
        96
      ],
      "id": "491dd3b0-f29d-479b-a746-928176044731",
      "name": "Get callouts",
      "executeOnce": true,
      "credentials": {
        "postgres": {
          "id": "Hx2VFmUi5WO2K4QX",
          "name": "Postgres account 2"
        }
      }
    },
    {
      "parameters": {
        "mode": "chooseBranch",
        "numberInputs": 3
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        912,
        -48
      ],
      "id": "711c3041-cd6a-40a5-b357-5afd17462cf3",
      "name": "Merge1"
    },
    {
      "parameters": {
        "content": "UPDATE CURRENT_ADS_LIST!!! WITH THE GROUP_nameS"
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        96,
        -288
      ],
      "id": "5e6c7f23-831c-4943-b99c-67edc9003dec",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "current_ads_list",
          "mode": "list",
          "cachedResultName": "current_ads_list"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "ad_id": "={{ $json.ad_id }}",
            "group_name": "={{ $json.group_name }}"
          },
          "matchingColumns": [
            "ad_id"
          ],
          "schema": [
            {
              "id": "ad_id",
              "displayName": "ad_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "group_name",
              "displayName": "group_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "key_word",
              "displayName": "key_word",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "ad_header",
              "displayName": "ad_header",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "ad_text",
              "displayName": "ad_text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "group_id",
              "displayName": "group_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "ad_url",
              "displayName": "ad_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "company_id",
              "displayName": "company_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "service_id",
              "displayName": "service_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "report_id",
              "displayName": "report_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "need_check",
              "displayName": "need_check",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "resolution",
              "displayName": "resolution",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "update_required",
              "displayName": "update_required",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "campaign_id",
              "displayName": "campaign_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        608,
        -32
      ],
      "id": "d457696c-4438-41a0-9d85-226053061d4a",
      "name": "add group name",
      "credentials": {
        "postgres": {
          "id": "Hx2VFmUi5WO2K4QX",
          "name": "Postgres account 2"
        }
      }
    }
  ],
  "connections": {
    "Convert to File": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "select ads data": {
      "main": [
        [
          {
            "node": "Code in JavaScript",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get quick links",
            "type": "main",
            "index": 0
          },
          {
            "node": "add group name",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "select company data": {
      "main": [
        [
          {
            "node": "select ads data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "check if script exists",
            "type": "main",
            "index": 0
          },
          {
            "node": "Mark_workwlow_started",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mark_workwlow_started": {
      "main": [
        [
          {
            "node": "select company data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Merge file header",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download File": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "set template path": {
      "main": [
        [
          {
            "node": "Download File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Read/Write Files from Disk2": {
      "main": [
        [
          {
            "node": "Upload a file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Init total counter": {
      "main": [
        [
          {
            "node": "Mark_workflow_completed",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload a file": {
      "main": [
        [
          {
            "node": "Init total counter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge file header": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set package": {
      "main": [
        [
          {
            "node": "set script",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "set script": {
      "main": [
        [
          {
            "node": "set template path",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If script already created": {
      "main": [
        [
          {
            "node": "set template path",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set package",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "check if script exists": {
      "main": [
        [
          {
            "node": "If script already created",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get quick links": {
      "main": [
        [
          {
            "node": "Get callouts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get callouts": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "add group name": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner",
    "availableInMCP": false,
    "errorWorkflow": "v2Z32ISEUzsFYnZw"
  },
  "staticData": {
    "global": {
      "steps_passed": 0,
      "tokens_used": 0,
      "step": 0
    }
  },
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {
    "When Executed by Another Workflow": [
      {
        "json": {
          "id": "UUlsZU9GOCmdvDHg",
          "root_execution_id": 142218,
          "company_id": 1,
          "threshhold": "0.79",
          "import_id": "7",
          "minus_words": "-2025 -ютуб -смотреть -беларуси -элиста -батайск -илимск -казани -йошкар -иркутск -новотроицк -симферополь -елец -чита -шахт -архангельск -стерлитамак -краснодарский -краснодар -сургут -сызрани -сыктывкар -таганрог -днр -днепропетровск -димитровград -дзержинск -крыму -дербент -грозный -гомеле -глазова -геленджик -гатчине -воронеж -волхова -вологда -волжском -волгодонск -волгоград -владимир -тагил -владикавказ -владивосток -тамбов -вк -твери -тобольска -красноярск -великая -вакансии -брянск -братск -боровичи -тольятти -томск -кузнецк -кузнецкая -курган -курск -кызыл -тула -бобруйске -тюмени -новомосковск -новокуйбышевск -бобруйс -благовещенск -удэ -астрахани -украина -улан -ленинск -липецк -край -кострома -копейск -комсомольск -ковров -бийск -бесплатно -ульяновск -ачинск -уральская -уссурийск -усть -березники -магнитогорск -майкоп -махачкала -междуреченск -миасс -минск -могилеве -мура -мурманск -муром -уфа -мурома -мытищи -ухта -набережные -назрани -нальчик -находка -балаково -невинномысск -нефтекамск -нефтеюганск -кисловодск -новокузнецк -киселевск -кирове -барнаул -кирова -киев -хабаровск -хасавюрт -белорусский -белоруссия -кемерово -канск -белгород -камышин -ярославле -ялте -якутск -камчатская -чебоксар -каменск -калуг -калининград -челнах -челябинск -череповец -черкесск -нижне -нижневартовск -ижевск -нижнекамск -новочебоксарск -северск -северодвинск -севастополе -абакан -альметьевск -сахалинск -сарапул -саранск -новосибирск -алматы -новороссийск -зеленодольск -амур -самостоятельно -самому -самарская -самар -салават -рязани -2018 -новочеркасск -новошахтинск -ногинску -ангарск -рыбинск -арзамас -соликамск -сочи -рубцовск -ростов -пятигорск -псков -прокопьевск -екатеринбург -спб -питере -ставрополь -петрозаводск -петербург -дятьково -перми -первоуральск -пенза -армавир -норильск -дону -оскол -новгород -орск -оренбург -орела -смоленск -омск -октябрьская -одесса -златоуст -иваново -можно -8 класс -добавить -программирование нормальных -как добавить -roblox script -информатика 8 -нужно -информатика 8 класс -сдавать -com -модели роблокс -счисления -игра скретч -сысоев -how -how to -число -системы счисления -что нужно -нормальных -может -сдавать программиста -получить -7 класс -куда -категорию -игры скретч -чтобы -получить дополнительное образование -получить дополнительное -со -использовать -это -как сохранить -сысоев программирование -сысоев программирование нормальных -нужно сдавать -что нужно сдавать -поменять -сохранить -презентацию компьютере -простые -класс число -обучение категорию -8 класс число -где найти -десятичной -школьник может -studio com -двоичную -счисления двоичную -школьник может получить -как поменять -может получить -системы счисления двоичную -десятичной системы счисления -десятичной системы -может получить дополнительное -включи -make -интерфейс -скул саратов -скул -вставить -a -категории -how to make -roblox scripts -to make -можно ли -синем ките -робототехнике синем -курсов робототехнике синем -курсов робототехнике -обучение категории -стал -как изменить -изменить -кружок робототехники -ките -надо -нпс -синем -нужно сдавать программиста -робототехнике синем ките -плейс -плейс роблокс -простые игры скретч -интерфейс роблокс -класс информатика -настроить -киберспорта -простые игры -ласка -задачник -gui -top it school -top it -плейс роблокс студио -серии -скопировать -лайт -что это -поставить -схемы скретч -как скопировать -вернуть -как поставить -все -как вернуть -как школьник может -где как -художник -скрч -игрока -где как школьник -scratches -фиксики -секции детей -сервер -как школьник -новые серии -действие роблокс -старый интерфейс -восьмеричная -космический бой скретч -сгу -закрепить -как закрепить -wiki -анимации роблокс -десятичную -как найти -старый интерфейс роблокс -2.0 -4 лет -9 класс -категории саратов -включи мультик -бой скретч -бой -космический бой -космический -1 космический бой -1 космический -9 12 -куда можно -как настроить -свой -com models -roblox com models -create roblox com -стал помощником -плк -свою -автошкола -курс мобильному монтажу -мобильному монтажу -робототехника дополнительное образование -scripts roblox -настройки -лет танцы -12 лет танцы -саратов кружок -condo -объект -почему -персонажа роблокс -персонажа роблокс студио -грокаем -грокаем алгоритмы -танцы саратове -как использовать -проекты скретч -свой плейс роблокс -цена курсов -свой плейс -лет танцы саратове -плагины -куда можно записать -айти скул -можно записать -ли разработчик -нпс роблокс -игорь -скрейч -писать код -красивые -цена курсов робототехнике -сервера -можно научиться -категорию саратове -курс мобильному -npc -категорию саратов -5 месяцев -знакомство -синем ките юбилейный -ките юбилейный -скф -юбилейный детей -скф мтуси -скф мтуси чемпионат -копировать -мтуси -мтуси чемпионат -мтуси чемпионат школьников -чемпионат -9 классе -пользоваться -лягушки -студио официальный сайт -студио официальный -maker -гугл -программирование нормальных сысоев -начинающих нуля -программирование плк -понять -выучить -плагины роблокс -дронов -как вставить -портал -посмотреть -топ айти -топ айти скул -айти скул саратов -сгенерировать -поменять язык -компьютере со -компьютере со слайдами -со слайдами -слайдами -нормальных сысоев -быстро -как быстро -игра 1 космический -скулбой -игра 1 -сысоева -включи мультик ласка -мультик ласка -мультик ласка скретч -ласка скретч -скретч фиксики -ооп -находится -8 класс информатика -научиться писать -сохранить игру -как сохранить игру -кодить -коды роблокс -scratching -как опубликовать -опубликовать -зайти -программированию 5 месяцев -материалы -r6 -базе -roblox script fe -ит скул саратов -ит скул -script fe -script fe animation -fe -fe animation -сделать рнг игру -16 -ролики -плк начинающих -сделать рнг -как сделать рнг -учимся -модельки роблокс студио -модельки роблокс -информатика 7 -где можно -on -как пользоваться -информатика 7 класс -название -гамме -1 часть -программированию автошкола -где находится -geometry dash -делать презентацию гамме -саратов робототехника дополнительное -школа программированию автошкола -scratch wiki -studio critical error -jump -какое образование -крошка -koshatnik0124 -крошка картошка -делать красивые -клуб робототехники -подробно -студио телефон -основные языки -знакомство со -задачник златопольского -язык роблокс студио -задачник златопольского программированию -скретч стал помощником -презентацию гамме -системы счисления информатика -презентации компьютере -владус -златопольского -златопольского программированию -счисления информатика -игорь гниденко -игорь гниденко программист -игры скретч 3b -клип -сервер игра -сервер игра кальмара -игра кальмара -игра кальмара майнкрафт -кружки робототехники -как вернуть старый -кальмара -вернуть старый -ли разработчик роблокса -3b -сохранить игру роблокс -счисления информатика 8 -кальмара майнкрафт -обновить -как научиться писать -critical error -critical -1.21 -отменить действие -studio critical -гниденко -такое -картошка -что сдавать -гниденко программист -scrach -скретч новые серии -пошагово -топ ит -студия лайт -гниденко программист саратов -рнг игру -рнг -одежду -как быстро делать -fly -d -game maker -пишут -лучше учить -объекты -npc roblox -копировать роблокс студио -копировать роблокс -как копировать роблокс -как копировать -нуб -программирования микроконтроллеров -микроконтроллеров -сохранить свой плейс -сохранить свой -как сохранить свой -scratch apk -apk -вернуть старый интерфейс -детей 4 лет -детей 4 -ли it -ли it клуб -it клуб школе -клуб школе -авиатор -авиатор саратов -делаю -creator -dash scratch -dash -geometry dash scratch -geometry -нормальных 1 часть -нормальных 1 -программирование нормальных 1 -задонатить роблокс -задонатить -ролики скретча -новые ролики скретча -новые ролики -включи новые ролики -включи новые -где школьник может -где школьник -фласкаи -фласкаи скретч -викторина -художник скретч -тулбокс роблокс -тулбокс -схемы скретч игры -быстро делать -head -полезные плагины роблокс -полезные плагины -златопольский -pro -дэдпул майнкрафт -дэдпул -магнит -кружок робототехники детей -кружок детей -vector3 -команды майнкрафте -бедрок -резервные коды -резервные -сгенерировать резервные коды -флачюской -сгенерировать резервные -скретч флачюской -как посмотреть -гимназия -5 саратов -owen уроки -owen -сысоева программирование нормальных -сысоева программирование -2023 -книт -to scratch -my -скрафтить -во -онли -готовят -готовят программистов -как делать красивые -как отключить -отключить -оржевского -гарвардские курсы программированию -гарвардские курсы -гарвардские -другу роблокс -другу -как зайти -icpc -соревнования программированию -соревнования -топ ит скул -анимацию роблокс -звезда -игра скретч фиксики -фото скретча -нужно изучать -что интересного -что интересного можно -интересного можно -интересного можно сделать -можно сделать -можно сделать scratch -сделать scratch -системе 8 класс -системе 8 -742 -число 742 -синем ките детей -ките детей -codewars -образование программистов -какое образование программистов -й -умер ли разработчик -умер ли -умер -нужны -отменить действие роблокс -программирование дронов -как кодить -разработчик где учиться -парт -как powerpoint -99 -студия сайт -восьмеричная десятичную -учиться веб -studio condo -студио лайт -айди -cat -как поменять язык -rfr -mouse -make a -to make a -i -фанпей -телеканал карусель -телеканал карусель игра -карусель -новом роблокс -майнкрафт 1.21 -лицей -витамина -команды роблокс -норма витамина -норма -как задонатить роблокс -как задонатить -смагин -савин смагин -савин -одежду нпс роблокс -одежду нпс -добавить одежду нпс -добавить одежду -как добавить одежду -карусель игра -карусель игра скретч -сейчас -презентацию компьютере со -эффекты -эффекты роблокс -эффекты роблокс студио -со слайдами пошагово -5 лет -слайдами пошагово -маркет -простые наборы -простые наборы робототехники -наборы робототехники -наборы робототехники конструкторы -моды роблокс -пишут моды роблокс -пишут моды -микроконтроллеров семейства -чем пишут моды -чем пишут -можно ли научиться -робототехники конструкторы -аксессуар -робототехники конструкторы элементами -55 -55 школа -программирования микроконтроллеров семейства -конструкторы элементами -мод роблокс -элементами -надо сдавать программиста -элементами программирования -элементами программирования беседа -программирования беседа -беседа -надо сдавать -что надо сдавать -что надо -персонажей роблокс -винил -беседа детьми -маркет роблокс -знакомство со скретч -npc roblox studio -основы программирования микроконтроллеров -папа -фигур гугл -gui roblox -cjplfybt -cheat -учат разработчика сайтов -игр скретч -крестоносцев -дэдпул майнкрафт 3d -бэкенд -бэкенд разработчик -как закрепить камеру -бэкенд разработчик подробно -кружки робототехники детей -разработчик подробно -системы информатика 8 -системы информатика -закрепить камеру -разработчик подробно что -солярис -камеру -пятизначные системы информатика -пятизначные системы -пятизначные -столбик пятизначные системы -столбик пятизначные -scratch разработка -стоят курсов робототехнике -аудиолекции ооп -подробно что -подробно что нужно -changed -майнкрафт 3d -месте роблокс -что нужно изучать -букв -фигур -нужно изучать 9 -изучать 9 -99 ночей -крестоносцев майнкрафт -основной контейнер -skin -контейнер -телевизор -проект скретч -изучать 9 классе -scratch skin -аудиолекции -wikihow -doodle jump scratch -частная -cjplfybt dbrnjhbys -готовые программы -столбик -готовые -златопольский задачник -scratch что это -scratch что -кировский район -кировский -могут -магнит скретч -песня -сколько надо -doodle jump -азы -саратове можно -character -чтобы писать код -магнит скретч промокод -чтобы писать -ии чтобы писать -ии чтобы -промокод игре -быть программистом -быть -чтобы быть программистом -чтобы быть -промокод игре карнавал -игре карнавал -карнавал -где саратове можно -4 года -cjplfybt dbrnjhbys d -нужно ли -dbrnjhbys -samsung игра -рб -samsung игра скретч -скопировать игру роблокс -скопировать игру -школе авиатор саратов -школе авиатор -idle -сараев -sprunski -шейдеры -x -леня -вид -studio condo file -condo file -владус леня -11 класс -как закрепить объект -как скопировать игру -закрепить объект роблокс -система счисления -восьмеричная система счисления -восьмеричная система -ко -как изучить -закрепить объект -developer -ребенок программированию сараев -балашова ребенок программированию -балашова ребенок -балашова -детей балашова ребенок -детей балашова -почета детей балашова -клуб школе авиатор -почета детей -почета -dbrnjhbys d scratch -живет -живет скретч -d scratch -поставить старый интерфейс -поставить старый -как роблоксе сгенерировать -как поставить старый -спавн -где учат разработчика -геометрических фигур гугл -геометрических фигур -учат разработчика -сдавать чтобы быть -сдавать чтобы -роблоксе сгенерировать -нужно сдавать чтобы -копия роблокс -оружие -camera -копия -table -восьмеричную системе 8 -лайт копия роблокс -лайт копия -студия лайт копия -восьмеричную системе -координатах студия лайт -координатах студия -восьмеричную -stud -делать анимации -добавить роблокс -как добавить роблокс -742 восьмеричную системе -решебник -742 восьмеричную -координатах -ты координатах студия -ты координатах -вставить картинку презентацию -ты -каких ты координатах -follow -вставить картинку -как вставить картинку -вайб -explorer -admin -лагерь саратов -число 742 восьмеричную -геометрических -гугл скрейч -создание геометрических фигур -каких ты -понять каких ты -понять каких -создание геометрических -pytutor -меню -доска почета детей -где обучают -доска почета -доска -что сдавать программиста -саратов доска почета -саратов доска -обучают -doodle -отдать -отдать ребенка -какая технология -одесская -какая технология представляет -технология представляет содержание -представляет -компьютер выбрать -какой компьютер выбрать -представляет содержание -какой компьютер -орленок -представляет содержание обучения -как скрафтить -содержание -ночей -как понять каких -как понять -содержание обучения -содержание обучения информационных -обучения информационных -русификатор -обучения информационных блоках -как отменить действие -можно учиться -информационных блоках -информационных блоках блочная -может ли -4 класс -блоках -блоках блочная -как отменить -блоках блочная модульная -коды проектов -скретч коды проектов -скретч коды -блочная модульная -фимина -блочная модульная информационная -зарабатывает -модульная информационная -модульная информационная программированная -информационная программированная -обновить роблокс -программированная -какого возраста -системные сообщения -dbrnjhbys d -скейч -златопольский задачник программированию -роблоксе сгенерировать резервные -телеканал -your -получается -walk -фигур гугл скрейч -ольга фимина -не получается -ольга -монтажу ольга фимина -монтажу ольга -мобильному монтажу ольга -где учат -как посмотреть есть -как создать -v -учебные языки -лор -гд изучаешь языки -гд изучаешь -гд -платформа гд изучаешь -платформа гд -игр помощью печата -помощью печата -какие кружки -клуб какие кружки -компьютерные программы -клуб какие -подростковый клуб какие -камея подростковый клуб -gui v3 script -камея подростковый -камея -помощью печата gpt -7 класс информатика -печата -переодеть -как переодеть -скрейтч -печата gpt -gui v3 -gpt -портал обучения -портал обучения информатике -обучения информатике -откатить действие роблокс -откатить действие -откатить -как откатить действие -как откатить -секции детей 4 -опубликовать игру roblox -опубликовать игру -как опубликовать игру -пас роблокс -пас -треки -scratch треки -цену пас роблокс -цену пас -настроить цену пас -настроить цену -как настроить цену -корп -сервера роблокс -возраст игры роблокс -возраст игры -3d модели роблокс -топ игр -топ игр скретч -все звания -все звания армии -звания -звания армии -звания армии роблокса -армии -большая горная -армии роблокса -достижение роблокс -мультик скретч -достижение -добавить достижение роблокс -добавить достижение -как добавить достижение -детали -аксессуар роблокс -добавить аксессуар роблокс -добавить аксессуар -как добавить аксессуар -проекты скретче -корп 3 -вводить коды -вводить коды роблокс -plugins -studio plugins -как готовить -презентация компьютере со -презентация компьютере -как готовить майнкрафте -fly gui v3 -готовить -фигуру фото -добавить фигуру фото -добавить фигуру -powerpoint добавить фигуру -powerpoint добавить -tower -нуб майнкрафте -готовить майнкрафте -r6 in -r6 in roblox -как powerpoint добавить -shedletsky -стриж -закрепить камеру одном -камеру одном -камеру одном месте -одном -одном месте -fly gui -одном месте роблокс -как опубликовать свой -опубликовать свой -pov -опубликовать свой плейс -как закреплять -build -питонтьютор -как закреплять новом -закреплять -закреплять новом -закреплять новом обновлении -щекотим лошадку -новом обновлении -раскрашивать -учимся раскрашивать -восьмеричные коды -восьмеричные -информатика восьмеричные коды -информатика восьмеричные -125 -число 125 -класс число 125 -новом обновлении roblox -435 восьмеричная десятичную -435 восьмеричная -435 -информатика 435 восьмеричная -информатика 435 -дк -обновлении -обновлении roblox -обновлении roblox studio -studio парты -indir -studio indir -презентация учимся раскрашивать -презентация учимся -айди роблокс -шанс роблокс -шанс -парты -как работать -спортивные секции -фанпей роблокс -как экспортировать -экспортировать -пифагор -пифагор школа -саратов какого возраста -no -настройки роблокс -пифагор школа программирования -сысоев 2023 -academy -поле -ребенку учиться -скачки -какой язык лучше -язык лучше -язык лучше учить -базовые коды программирования -какой язык учить -язык учить -язык учить бэкенда -учить бэкенда -закулисье -базовые коды -бэкенда -c a -букв c a -букв c -практиса букв c -практиса букв -практиса -английский практиса букв -английский практиса -курсы школьников -секта -16 десятичную -toolbox -лошадку -scratch cat -widgets roblox stud -widgets roblox -widgets -studio widgets roblox -studio widgets -программирование c среднее -c среднее образование -делать анимации роблокс -r34 -roblox r34 -pressure roblox r34 -pressure -mouse in roblox -mouse in -follow mouse in -follow mouse -explorer roblox -ап -скрейч ап -гугл скрейч ап -среднее образование -как выложить -среднее образование программа -образование программа -образование программа 02 -программа 02 -02 -выложить -руя -русификатор roblox studio -норма витамина c -суточная норма витамина -суточная норма -суточная -sprunki -маркс -как скрафтить мешок -скрафтить мешок -скрафтить мешок майнкрафт -где готовят -где готовят программистов -русификатор roblox -мешок -мешок майнкрафт -scratch screaming -scratch screaming tuna -screaming -screaming tuna -роблокс тянка -tuna -тянка -антибиотик -объектно -песня скретч -with -часть 1 -он -помощник майнкрафте -bans -bans roblox -fluxus -простыми словами -fluxus roblox -msk -win -mimo -mimo обучение -windows -mimo обучение программированию -скачки щекотим -пошаговое -стоит ли изучать -ли изучать -номер 5 -принтера -3д принтера -программированию 3д принтера -09.02.07 саратов -09.02.07 -studio как -программирование 09.02.07 -номер 5 саратов -как добавить эффекты -тренажер -тренажер детей -добавить эффекты -добавить эффекты роблокс -дронов scratch -елсит -елсит ли -елсит ли it -нужные -вызу -вузовские -роблокс креатор -роблокс креатор каком -креатор -креатор каком -креатор каком языке -девочек -чувгу -саратов звезда -работает роблокс -игру скретч -изикот -изикот школа -изикот школа программирования -какие программы -интерфейса -гдз -скин -что такое -поменять язык роблокс -алфавит -команды чувгу -саратове команды чувгу -высшее образование программиста -как сгенерировать -gui roblox script -саратове команды -icpc саратове команды -icpc саратове -программированию icpc -соревнования программированию icpc -плас -ван плас -изучают школе информатике -tp gui roblox -tp gui -tp -особенности -донат -мне проект -мне -движение -ко мне проект -ко мне -зайти другу роблокс -зайти другу -как зайти другу -р6 -свою игру -строить"
        }
      }
    ]
  },
  "versionId": "ccd2ba7f-1ced-42cc-bd18-885ed9f0ab88",
  "triggerCount": 0,
  "shared": [
    {
      "createdAt": "2025-09-30T17:56:19.098Z",
      "updatedAt": "2025-09-30T17:56:19.098Z",
      "role": "workflow:owner",
      "workflowId": "UUlsZU9GOCmdvDHg",
      "projectId": "spKmbJLU4mvACXIB"
    }
  ],
  "tags": [
    {
      "createdAt": "2025-10-06T13:06:54.644Z",
      "updatedAt": "2025-10-06T13:06:54.644Z",
      "id": "DBEf57wUDunVJUG6",
      "name": "campaign update"
    }
  ]
}