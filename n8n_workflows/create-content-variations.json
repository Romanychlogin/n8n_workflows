{
  "createdAt": "2025-08-29T13:30:55.128Z",
  "updatedAt": "2025-09-02T08:49:33.027Z",
  "id": "XSaQaKGux3NRjwAk",
  "name": "Create content variations",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -544,
        0
      ],
      "id": "d2c77009-67ce-45d7-b690-778d53a6afb4",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "value": "Romanychlogin",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "n8n_prompts",
          "mode": "list",
          "cachedResultName": "n8n_prompts",
          "cachedResultUrl": "https://github.com/Romanychlogin/n8n_prompts"
        },
        "filePath": "content_variants.txt",
        "additionalParameters": {}
      },
      "type": "n8n-nodes-base.github",
      "typeVersion": 1.1,
      "position": [
        -304,
        0
      ],
      "id": "7ce7a189-6171-4f74-9fea-ab028efdae28",
      "name": "Get a file1",
      "webhookId": "87cb7d0c-6971-44f5-a103-a1ac454e96fe",
      "credentials": {
        "githubApi": {
          "id": "JQAFAcMNS9Ylyb0V",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -96,
        0
      ],
      "id": "dccfcf04-9f49-4109-ae95-9287a86061b2",
      "name": "Extract from File2"
    },
    {
      "parameters": {
        "jsCode": "// Function-Node (Run Once)\nconst workflowData = $getWorkflowStaticData('global');\nworkflowData.variations_prompt = items[0].json;\nreturn items;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        112,
        0
      ],
      "id": "14d183f0-265f-4fbb-8471-88833b6c1b22",
      "name": "Code3"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/responses",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "openAiApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{$json}}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1184,
        0
      ],
      "id": "d07e35bb-1ca5-42fe-bfe9-95fe21b13832",
      "name": "HTTP Request",
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "V8R8KiZKXscJQ1sL",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "company_content_raw",
          "mode": "list",
          "cachedResultName": "company_content_raw"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "phrase": "={{ $json.phrase }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "phrase_id",
              "displayName": "phrase_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "phrase",
              "displayName": "phrase",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        2160,
        0
      ],
      "id": "3aa6a42a-b779-4b06-8d91-2cf6d2bd2142",
      "name": "Insert rows in a table",
      "credentials": {
        "postgres": {
          "id": "4YkdFJcdTgzo9hkz",
          "name": "PGvector"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const workflowData = $getWorkflowStaticData('global');\nconst my_prompt = workflowData.variations_prompt.data;\n\nreturn [{\n  json: \n {\n  \"model\": \"gpt-5\",\n  \"input\": [\n    {\n      \"role\": \"developer\",\n      \"content\": [\n        {\n          \"type\": \"input_text\",\n          \"text\": \"Отвечай только валидным JSON-массивом объектов в формате: [{\\\"phrase_variant\\\": string}]. Не добавляй комментариев или форматирования вне JSON.\\n- Каждый объект содержит только ключ \\\"phrase_variant\\\" со строковым значением.\\n- Все строки должны быть уникальными и не пустыми.\\n\\n\"\n        }\n      ]\n    },\n    {\n      \"role\": \"user\",\n      \"content\": [\n        {\n          \"type\": \"input_text\",\n          \"text\": $json.phrase + \" \" + my_prompt\n        }\n      ]\n    }\n  ],\n  \"text\": {\n    \"format\": {\n      \"type\": \"json_schema\",\n      \"name\": \"phrase_variant_list\",\n      \"strict\": true,\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"phrase_variants\": {\n            \"type\": \"array\",\n            \"description\": \"A strict ordered list of phrase variants.\",\n            \"items\": {\n              \"type\": \"string\",\n              \"description\": \"A single phrase variant (non-empty).\",\n              \"minLength\": 1\n            }\n          }\n        },\n        \"required\": [\n          \"phrase_variants\"\n        ],\n        \"additionalProperties\": false\n      }\n    },\n    \"verbosity\": \"low\"\n  },\n  \"reasoning\": {\n    \"effort\": \"minimal\",\n    \"summary\": null\n  },\n  \"tools\": [],\n  \"store\": false,\n  \"include\": [\n    \"reasoning.encrypted_content\",\n    \"web_search_call.action.sources\"\n  ]\n}\n\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        896,
        0
      ],
      "id": "e3b6c9de-7023-4bb8-949c-fc719f6a1857",
      "name": "Set API JSON"
    },
    {
      "parameters": {
        "jsCode": "// Берём первый item из входных данных\nconst input = items[0].json;\n// Достаём исходное значение\nlet raw = input.output?.[1]?.content?.[0]?.text;\n\n// Если это строка — пробуем распарсить как JSON\nlet parsed = raw;\nif (typeof raw === 'string') {\n  try {\n    parsed = JSON.parse(raw);\n  } catch (e) {\n    throw new Error('Ожидался JSON, но пришла строка: ' + raw);\n  }\n}\n\n// Достаём массив вариантов\nconst phrase_variants = Array.isArray(parsed) ? parsed : parsed?.phrase_variants;\n\nif (!Array.isArray(phrase_variants)) {\n  throw new Error('Ожидался массив phrase_variants, а пришло: ' + JSON.stringify(parsed));\n}\n// Разворачиваем каждый объект в отдельный item\nreturn phrase_variants.map((c, index) => ({\n  json: {\n    index,\n    phrase: c\n  }\n}));"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1872,
        0
      ],
      "id": "154fc776-2d97-49f4-9715-3ef4cf2fc409",
      "name": "Parse JSON"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "11ac8bb1-a8b3-4857-81b9-3b42917b89b6",
              "name": "output",
              "value": "{\"competitors\":[{\"competitor_name\":\"Алгоритмика (Algorithmics)\",\"competitor_type\":\"franchise\",\"competitor_url\":\"https://algoritmika.org\"},{\"competitor_name\":\"CODDY\",\"competitor_type\":\"franchise\",\"competitor_url\":\"https://coddyschool.com\"},{\"competitor_name\":\"ROBBO Club\",\"competitor_type\":\"franchise\",\"competitor_url\":\"https://robboclub.ru\"},{\"competitor_name\":\"Logiscool\",\"competitor_type\":\"franchise\",\"competitor_url\":\"https://www.logiscool.com\"},{\"competitor_name\":\"IT Step Academy (ШАГ)\",\"competitor_type\":\"franchise\",\"competitor_url\":\"https://itstep.org\"},{\"competitor_name\":\"Code Ninjas\",\"competitor_type\":\"franchise\",\"competitor_url\":\"https://www.codeninjas.com\"},{\"competitor_name\":\"iCode School\",\"competitor_type\":\"franchise\",\"competitor_url\":\"https://icodeschool.com\"},{\"competitor_name\":\"Engineering For Kids\",\"competitor_type\":\"franchise\",\"competitor_url\":\"https://www.engineeringforkids.com\"},{\"competitor_name\":\"IT-Куб (центры цифрового образования)\",\"competitor_type\":\"local\",\"competitor_url\":\"https://it-cube.su\"},{\"competitor_name\":\"Кванториум (детский технопарк)\",\"competitor_type\":\"local\",\"competitor_url\":\"https://kvantorium.ru\"},{\"competitor_name\":\"Яндекс Лицей\",\"competitor_type\":\"global\",\"competitor_url\":\"https://lyceum.yandex.ru\"},{\"competitor_name\":\"IT Школа Samsung\",\"competitor_type\":\"global\",\"competitor_url\":\"https://itschool.samsung.ru\"},{\"competitor_name\":\"Академия Иннополис (для школьников)\",\"competitor_type\":\"global\",\"competitor_url\":\"https://academy.innopolis.ru\"},{\"competitor_name\":\"Сириус (курсы и смены по информатике)\",\"competitor_type\":\"global\",\"competitor_url\":\"https://sochisirius.ru\"},{\"competitor_name\":\"Kodland (Кодланд)\",\"competitor_type\":\"global\",\"competitor_url\":\"https://kodland.org\"},{\"competitor_name\":\"itgenio\",\"competitor_type\":\"global\",\"competitor_url\":\"https://itgen.io\"},{\"competitor_name\":\"Фоксфорд (программирование для школьников)\",\"competitor_type\":\"global\",\"competitor_url\":\"https://foxford.ru\"},{\"competitor_name\":\"Skysmart (курсы программирования)\",\"competitor_type\":\"global\",\"competitor_url\":\"https://skysmart.ru\"},{\"competitor_name\":\"Тетрика (программирование для школьников)\",\"competitor_type\":\"global\",\"competitor_url\":\"https://tetrika-school.ru\"},{\"competitor_name\":\"GeekBrains (курсы для школьников)\",\"competitor_type\":\"global\",\"competitor_url\":\"https://geekbrains.ru\"},{\"competitor_name\":\"Нетология\",\"competitor_type\":\"global\",\"competitor_url\":\"https://netology.ru\"},{\"competitor_name\":\"Skillbox\",\"competitor_type\":\"global\",\"competitor_url\":\"https://skillbox.ru\"},{\"competitor_name\":\"SkillFactory\",\"competitor_type\":\"global\",\"competitor_url\":\"https://skillfactory.ru\"},{\"competitor_name\":\"Яндекс Практикум\",\"competitor_type\":\"global\",\"competitor_url\":\"https://practicum.yandex.ru\"},{\"competitor_name\":\"Uchi.ru (информатика/программирование)\",\"competitor_type\":\"global\",\"competitor_url\":\"https://uchi.ru\"},{\"competitor_name\":\"Stepik\",\"competitor_type\":\"global\",\"competitor_url\":\"https://stepik.org\"},{\"competitor_name\":\"Coursera\",\"competitor_type\":\"global\",\"competitor_url\":\"https://coursera.org\"},{\"competitor_name\":\"edX\",\"competitor_type\":\"global\",\"competitor_url\":\"https://edx.org\"},{\"competitor_name\":\"Udemy\",\"competitor_type\":\"global\",\"competitor_url\":\"https://udemy.com\"},{\"competitor_name\":\"Codecademy\",\"competitor_type\":\"global\",\"competitor_url\":\"https://codecademy.com\"},{\"competitor_name\":\"Khan Academy (программирование)\",\"competitor_type\":\"global\",\"competitor_url\":\"https://ru.khanacademy.org\"},{\"competitor_name\":\"Code.org\",\"competitor_type\":\"global\",\"competitor_url\":\"https://code.org\"},{\"competitor_name\":\"Hour of Code\",\"competitor_type\":\"global\",\"competitor_url\":\"https://hourofcode.com\"},{\"competitor_name\":\"freeCodeCamp\",\"competitor_type\":\"global\",\"competitor_url\":\"https://freecodecamp.org\"},{\"competitor_name\":\"iD Tech\",\"competitor_type\":\"global\",\"competitor_url\":\"https://www.idtech.com\"},{\"competitor_name\":\"Tynker\",\"competitor_type\":\"global\",\"competitor_url\":\"https://www.tynker.com\"},{\"competitor_name\":\"CodeMonkey\",\"competitor_type\":\"global\",\"competitor_url\":\"https://www.codemonkey.com\"},{\"competitor_name\":\"Kodable\",\"competitor_type\":\"global\",\"competitor_url\":\"https://www.kodable.com\"},{\"competitor_name\":\"Scratch (онлайн-платформа)\",\"competitor_type\":\"global\",\"competitor_url\":\"https://scratch.mit.edu\"},{\"competitor_name\":\"CodeCombat\",\"competitor_type\":\"global\",\"competitor_url\":\"https://codecombat.com\"},{\"competitor_name\":\"CodeHS\",\"competitor_type\":\"global\",\"competitor_url\":\"https://codehs.com\"},{\"competitor_name\":\"Google CS First\",\"competitor_type\":\"global\",\"competitor_url\":\"https://csfirst.withgoogle.com\"},{\"competitor_name\":\"Microsoft MakeCode\",\"competitor_type\":\"global\",\"competitor_url\":\"https://makecode.com\"},{\"competitor_name\":\"Blockly Games\",\"competitor_type\":\"global\",\"competitor_url\":\"https://blockly.games\"},{\"competitor_name\":\"Lightbot\",\"competitor_type\":\"global\",\"competitor_url\":\"https://lightbot.com\"},{\"competitor_name\":\"Roblox Education\",\"competitor_type\":\"global\",\"competitor_url\":\"https://education.roblox.com\"},{\"competitor_name\":\"Unity Learn\",\"competitor_type\":\"global\",\"competitor_url\":\"https://learn.unity.com\"},{\"competitor_name\":\"Unreal Online Learning\",\"competitor_type\":\"global\",\"competitor_url\":\"https://www.unrealengine.com/onlinelearning\"},{\"competitor_name\":\"JetBrains Academy (Hyperskill)\",\"competitor_type\":\"global\",\"competitor_url\":\"https://hyperskill.org\"},{\"competitor_name\":\"CodeGym\",\"competitor_type\":\"global\",\"competitor_url\":\"https://codegym.cc\"},{\"competitor_name\":\"SoloLearn\",\"competitor_type\":\"global\",\"competitor_url\":\"https://www.sololearn.com\"},{\"competitor_name\":\"e-olymp\",\"competitor_type\":\"global\",\"competitor_url\":\"https://www.e-olymp.com\"},{\"competitor_name\":\"Timus Online Judge\",\"competitor_type\":\"global\",\"competitor_url\":\"https://acm.timus.ru\"},{\"competitor_name\":\"Codeforces\",\"competitor_type\":\"global\",\"competitor_url\":\"https://codeforces.com\"},{\"competitor_name\":\"AtCoder\",\"competitor_type\":\"global\",\"competitor_url\":\"https://atcoder.jp\"},{\"competitor_name\":\"OpenEdu (Открытое образование)\",\"competitor_type\":\"global\",\"competitor_url\":\"https://openedu.ru\"},{\"competitor_name\":\"Pluralsight\",\"competitor_type\":\"global\",\"competitor_url\":\"https://www.pluralsight.com\"},{\"competitor_name\":\"Udacity\",\"competitor_type\":\"global\",\"competitor_url\":\"https://www.udacity.com\"},{\"competitor_name\":\"DataCamp\",\"competitor_type\":\"global\",\"competitor_url\":\"https://www.datacamp.com\"},{\"competitor_name\":\"СГУ (доп. курсы по программированию для школьников)\",\"competitor_type\":\"local\",\"competitor_url\":\"https://www.sgu.ru\"},{\"competitor_name\":\"СГТУ им. Гагарина (подготовительные/IT-курсы для школьников)\",\"competitor_type\":\"local\",\"competitor_url\":\"https://www.sstu.ru\"}]}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1440,
        0
      ],
      "id": "08447f9b-7e7b-4cd7-a7cc-22542f0087de",
      "name": "Edit Fields",
      "disabled": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e6d5f740-801a-406e-bbc1-04830ee734db",
              "name": "arr",
              "value": "={{ JSON.parse($json.output) }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1648,
        0
      ],
      "id": "6068a9c6-fc44-4f2b-b801-fe37cb872deb",
      "name": "Edit Fields1",
      "disabled": true
    },
    {
      "parameters": {
        "content": "пока не видно смысла"
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        480,
        -240
      ],
      "id": "31cc35cc-5127-4beb-bb66-e0a2a150e4a4",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "select DISTINCT(ct.phrase)  from company_content_raw ct ",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        320,
        0
      ],
      "id": "125d9023-5a48-42f1-b7d0-1f3d5fe32a6a",
      "name": "GET EXISTING CONTENT",
      "credentials": {
        "postgres": {
          "id": "4YkdFJcdTgzo9hkz",
          "name": "PGvector"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        528,
        0
      ],
      "id": "b330cd76-eee6-4fea-a8c8-2bc5c298a020",
      "name": "Loop Over Items"
    }
  ],
  "connections": {
    "Get a file1": {
      "main": [
        [
          {
            "node": "Extract from File2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File2": {
      "main": [
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Get a file1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code3": {
      "main": [
        [
          {
            "node": "GET EXISTING CONTENT",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set API JSON": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse JSON": {
      "main": [
        [
          {
            "node": "Insert rows in a table",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Parse JSON",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GET EXISTING CONTENT": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Set API JSON",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert rows in a table": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "6dca7fdd-31fc-4726-9036-bc0b53282187",
  "triggerCount": 0,
  "shared": [
    {
      "createdAt": "2025-08-29T13:30:55.128Z",
      "updatedAt": "2025-08-29T13:30:55.128Z",
      "role": "workflow:owner",
      "workflowId": "XSaQaKGux3NRjwAk",
      "projectId": "spKmbJLU4mvACXIB"
    }
  ],
  "tags": []
}