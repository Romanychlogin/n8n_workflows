{
  "createdAt": "2025-09-15T13:20:37.694Z",
  "updatedAt": "2025-09-15T14:02:00.621Z",
  "id": "dtznhpI7kf5GGvVE",
  "name": "insert base minus words",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        480,
        -368
      ],
      "id": "3f542828-7028-4273-a719-7a1322531c1c",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "content": "тех долг - автоматически удалять регионы присутствия"
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1632,
        -240
      ],
      "id": "b809dd4d-4390-4a29-92f2-bd00a41607c0",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1440,
        -672
      ],
      "id": "77f65885-7204-485d-ad67-c76706e470e9",
      "name": "Loop Over Items2"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "url",
              "value": "https://www.dropbox.com/scl/fi/ftym6is48e0pjazowrq7j/minuses_base.csv?rlkey=npnvyyn03jq63ay13qxrp0ow3&dl=1"
            }
          ]
        },
        "options": {}
      },
      "id": "5fa7b552-fa02-4fdb-9fc7-8c9c2389ad3b",
      "name": "Enter URL",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        912,
        -720
      ]
    },
    {
      "parameters": {
        "url": "={{$json[\"url\"]}}",
        "responseFormat": "file",
        "options": {}
      },
      "id": "ec696e3f-db61-47d8-920d-10ca7502b241",
      "name": "Download File",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        1072,
        -704
      ]
    },
    {
      "parameters": {
        "options": {
          "delimiter": ";"
        }
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1216,
        -688
      ],
      "id": "a9eba013-3c03-4cab-b764-15edd412a292",
      "name": "Extract from File"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/embeddings",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "openAiApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{$json}}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1952,
        -592
      ],
      "id": "58318542-27bf-4c08-bcfe-0b0f24145cbc",
      "name": "HTTP Request",
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "V8R8KiZKXscJQ1sL",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "return [{\n  json: {\n  \"model\": \"text-embedding-3-small\",\n  \"input\": $json.minus_word\n}\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1776,
        -576
      ],
      "id": "e13d4cb2-2736-40a0-b331-6415f858676c",
      "name": "Set API JSON"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        2128,
        -704
      ],
      "id": "ecb37a16-fafc-412b-9ca0-24e5942a9c9c",
      "name": "Merge"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO minus_words_base (minus_word_embedding, minus_word, source_key, is_geo, is_moscow_region)\nVALUES ($1::vector, $2, $3,$4::boolean,$5::boolean);",
        "options": {
          "queryReplacement": "=[\n  { \"value\": \"={{'[' + $json.data[0].embedding.map(e => Number(e)).join(',') + ']'}}\" },\n  { \"value\": \"={{$json.minus_word}}\" },\n  { \"value\": \"={{'CSV upload'}}\" },\n  { \"value\": \"={{$json.geo}}\" },\n  { \"value\": \"={{$json.moscow}}\" }\n]"
        }
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        2480,
        -592
      ],
      "id": "1f9ed17b-97ca-4f0e-aa27-cd16b388511e",
      "name": "Execute a SQL query1",
      "credentials": {
        "postgres": {
          "id": "4YkdFJcdTgzo9hkz",
          "name": "PGvector"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "//Fixing common error in the first field name for CSV import\n\nfunction sanitizeKey(k) {\n  return String(k)\n    .replace(/[\\uFEFF\\u200B-\\u200D\\u2060\\u00A0]/g, \"\")\n    .replace(/[\\x00-\\x1F\\x7F]/g, \"\")\n    .replace(/[“”\"']/g, \"\")\n    .replace(/\\s+/g, \" \")\n    .trim();\n}\n\nconst obj = { ...$json };\nconst oldKey = Object.keys(obj)[0];\nif (oldKey) {\n  const newKey = sanitizeKey(oldKey) || oldKey;\n  if (newKey !== oldKey) {\n    obj[newKey] = obj[oldKey];\n    delete obj[oldKey];\n  }\n}\nreturn [{ json: obj }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1616,
        -592
      ],
      "id": "db61c69f-b68d-4822-b9cb-1a47baf85fb1",
      "name": "sanitizeKey"
    }
  ],
  "connections": {
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Enter URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items2": {
      "main": [
        [],
        [
          {
            "node": "sanitizeKey",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enter URL": {
      "main": [
        [
          {
            "node": "Download File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download File": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Set API JSON": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Execute a SQL query1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute a SQL query1": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "sanitizeKey": {
      "main": [
        [
          {
            "node": "Set API JSON",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "33e69885-71d6-42c3-8309-9973c290a07e",
  "triggerCount": 0,
  "shared": [
    {
      "createdAt": "2025-09-15T13:20:37.694Z",
      "updatedAt": "2025-09-15T13:20:37.694Z",
      "role": "workflow:owner",
      "workflowId": "dtznhpI7kf5GGvVE",
      "projectId": "spKmbJLU4mvACXIB"
    }
  ],
  "tags": []
}