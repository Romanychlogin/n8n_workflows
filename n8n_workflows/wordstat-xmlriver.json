{
  "createdAt": "2025-09-03T13:10:38.957Z",
  "updatedAt": "2025-09-17T15:30:16.843Z",
  "id": "t4Ep016fMXc6Cyhm",
  "name": "Wordstat xmlriver",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -880,
        -32
      ],
      "id": "3da8439f-3211-4fec-9487-a3ffd7dcca18",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "248d0f5a-a517-4bff-a733-13ab4ad78132",
              "name": "yandex_region_id",
              "value": "53",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -64,
        -16
      ],
      "id": "397ccd43-b5ed-49d1-a77b-06ef3ce84e10",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "url": "=http://xmlriver.com/wordstat/new/json?user=18041&key=326fc7615c355f1f5ad41ac8f707e22aa022d07a&regions={{ $json.yandex_region_id }}&query={{ $json.key_word }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        144,
        -32
      ],
      "id": "853ca62b-bfa7-4599-9c96-fb4ddbac1fbb",
      "name": "HTTP Request",
      "alwaysOutputData": true,
      "retryOnFail": true
    },
    {
      "parameters": {
        "content": "1)Берем список слов, отсортированных по id\n2)Берем первое слово, такое по которому не было запросов в Вордстат. \nа)делаем запрос. Для каждого слова в ответе 1.1)Если слово уже есть в списке - обновляем индекс\n1.2)если слова нет - добавляем.",
        "height": 400,
        "width": 416
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -720,
        -464
      ],
      "id": "9a8fd90d-e01f-4989-8ea1-e6d6f2a1070e",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5b3485a2-cb50-486a-932c-fc27de0a25da",
              "name": "company_name",
              "value": "Первый визовый центр Курган",
              "type": "string"
            },
            {
              "id": "f74ac992-90a4-4403-a75e-17656de76902",
              "name": "company_id",
              "value": 2,
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -688,
        -32
      ],
      "id": "2775a407-4f21-42bc-ab66-40d671ecc7f1",
      "name": "set company name"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "key_words",
          "mode": "list",
          "cachedResultName": "key_words"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "wordstat_parsed",
              "value": "false"
            },
            {
              "column": "company_id",
              "value": "={{$json.company_id}}"
            },
            {
              "column": "is_relevant",
              "value": "true"
            }
          ]
        },
        "sort": {
          "values": [
            {
              "column": "key_word_id"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -512,
        -32
      ],
      "id": "a933aeed-e031-4b98-8d5d-c80e028ea5fa",
      "name": "Select rows from a table",
      "credentials": {
        "postgres": {
          "id": "Hx2VFmUi5WO2K4QX",
          "name": "Postgres account 2"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -304,
        -32
      ],
      "id": "d7194125-517d-44ed-8709-bff4fc87a597",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "key_words",
          "mode": "list",
          "cachedResultName": "key_words"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "wordstat_parsed": true,
            "company_id": "={{$('set company name').first().json.company_id }}",
            "key_word": "={{ $json.key_word }}",
            "wordstat_count": "={{ $json.wordstat_count }}",
            "service_id": "={{ $('Loop Over Items').first().json.service_id}}",
            "from_wordstat": "={{ true }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "key_word_id",
              "displayName": "key_word_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "company_id",
              "displayName": "company_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "key_word",
              "displayName": "key_word",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "wordstat_count",
              "displayName": "wordstat_count",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "service_id",
              "displayName": "service_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "wordstat_parsed",
              "displayName": "wordstat_parsed",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            },
            {
              "id": "from_wordstat",
              "displayName": "from_wordstat",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "is_relevant",
              "displayName": "is_relevant",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "ai_response_tokens",
              "displayName": "ai_response_tokens",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1472,
        48
      ],
      "id": "445aaddb-39cc-4051-a490-a931bbf42912",
      "name": "Insert rows in a table",
      "credentials": {
        "postgres": {
          "id": "Hx2VFmUi5WO2K4QX",
          "name": "Postgres account 2"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// n8n Code node (JavaScript)\n\n\n  const popular = $json.popular;\n  return popular.map((p,index) => {\n    return {\n      json: {\n        \n        wordstat_count: p.value,   // переименовали value\n        key_word: p.text,\n    is_first:0==index // костыль для сброса цикла\n      }\n    };\n  });\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        576,
        0
      ],
      "id": "567393cc-4834-456a-8f5d-16686e2afba2",
      "name": "Развернуть список"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT\n  v.key_word,\n  v.wordstat_count,\n  COALESCE(COUNT(k.key_word_id), 0)      AS count_key_words,\n  COALESCE(MIN(k.key_word_id), 0)        AS key_word_id   -- или MAX(...)\nFROM (VALUES ($1::text, $2::int)) AS v(key_word, wordstat_count)\nLEFT JOIN key_words k\n  ON k.key_word = v.key_word\nGROUP BY v.key_word, v.wordstat_count;",
        "options": {
          "queryReplacement": "={{ $json.key_word}}, {{$json.wordstat_count }}"
        }
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1168,
        -16
      ],
      "id": "62dad88d-14a5-468b-afad-3301ceb8c72b",
      "name": "Check if exists",
      "credentials": {
        "postgres": {
          "id": "Hx2VFmUi5WO2K4QX",
          "name": "Postgres account 2"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "ebff6d1d-ab25-4928-b56c-0eaf8903f895",
              "leftValue": "={{ $json.count_key_words.toNumber() }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1344,
        -96
      ],
      "id": "2e170d6c-e1e0-4858-990d-f49b7970744c",
      "name": "If"
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "key_words",
          "mode": "list",
          "cachedResultName": "key_words"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "key_word_id": "={{$json.key_word_id}}",
            "wordstat_count": "={{ $json.wordstat_count}}"
          },
          "matchingColumns": [
            "key_word_id"
          ],
          "schema": [
            {
              "id": "key_word_id",
              "displayName": "key_word_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "company_id",
              "displayName": "company_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "key_word",
              "displayName": "key_word",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "wordstat_count",
              "displayName": "wordstat_count",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "service_id",
              "displayName": "service_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "wordstat_parsed",
              "displayName": "wordstat_parsed",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "from_wordstat",
              "displayName": "from_wordstat",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1856,
        16
      ],
      "id": "9c06c421-55b2-4ccd-9a58-6c4545671f6e",
      "name": "Update rows in a table",
      "credentials": {
        "postgres": {
          "id": "Hx2VFmUi5WO2K4QX",
          "name": "Postgres account 2"
        }
      }
    },
    {
      "parameters": {
        "content": "5 parallel striams to have 5 concurrent requests to xmlriver API (supports up to 10). failed (need more time to carefully investigate - returned to 1 stream. TBD "
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -384,
        144
      ],
      "id": "bb34c364-4a65-4167-958d-7d34cdfda0ec",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ebafa31d-edf7-41c0-a06e-e884ad9595ea",
              "name": "is_first",
              "value": "=false",
              "type": "boolean"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        992,
        -16
      ],
      "id": "bf719b2e-ac50-4b8e-bc9d-fc3ddf820717",
      "name": "reset first_item"
    },
    {
      "parameters": {
        "options": {
          "reset": "={{ $json.is_first }}"
        }
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        768,
        -32
      ],
      "id": "added0dc-06b8-4edb-9fe4-2ec0e6698181",
      "name": "Loop Over Items1"
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "key_words",
          "mode": "list",
          "cachedResultName": "key_words"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "key_word_id": "={{ $('Loop Over Items').item.json.key_word_id }}",
            "wordstat_parsed": "={{ true }}"
          },
          "matchingColumns": [
            "key_word_id"
          ],
          "schema": [
            {
              "id": "key_word_id",
              "displayName": "key_word_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "company_id",
              "displayName": "company_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "key_word",
              "displayName": "key_word",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "wordstat_count",
              "displayName": "wordstat_count",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "service_id",
              "displayName": "service_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "wordstat_parsed",
              "displayName": "wordstat_parsed",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "from_wordstat",
              "displayName": "from_wordstat",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1072,
        -256
      ],
      "id": "0e4cdda1-314b-4676-b4d0-4bfc5605f90d",
      "name": "Mark parsed",
      "executeOnce": true,
      "credentials": {
        "postgres": {
          "id": "Hx2VFmUi5WO2K4QX",
          "name": "Postgres account 2"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "77b113ff-8ec2-47ab-9b08-381dce405765",
              "leftValue": "={{ $json.popular }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        352,
        -32
      ],
      "id": "453422a5-5a66-4232-acea-059571d0b845",
      "name": "If empty return"
    }
  ],
  "connections": {
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "set company name",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "set company name": {
      "main": [
        [
          {
            "node": "Select rows from a table",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Select rows from a table": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "If empty return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Развернуть список": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check if exists": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Update rows in a table",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Insert rows in a table",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update rows in a table": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert rows in a table": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [
          {
            "node": "Mark parsed",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "reset first_item",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "reset first_item": {
      "main": [
        [
          {
            "node": "Check if exists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mark parsed": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If empty return": {
      "main": [
        [
          {
            "node": "Mark parsed",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Развернуть список",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "c1ca5b56-81ee-4c33-90af-af6af2ecee84",
  "triggerCount": 0,
  "shared": [
    {
      "createdAt": "2025-09-03T13:10:38.957Z",
      "updatedAt": "2025-09-03T13:10:38.957Z",
      "role": "workflow:owner",
      "workflowId": "t4Ep016fMXc6Cyhm",
      "projectId": "spKmbJLU4mvACXIB"
    }
  ],
  "tags": []
}